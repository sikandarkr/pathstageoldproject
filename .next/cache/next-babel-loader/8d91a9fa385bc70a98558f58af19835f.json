{"ast":null,"code":"var _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/PostFeed.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import NewPost from \"./NewPost\";\nimport Post from \"./Post\";\nimport { addPost, deletePost, likePost, unlikePost, getPostFeed, addComment, deleteComment } from \"../../lib/api\";\n\nclass PostFeed extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      posts: [],\n      text: \"\",\n      image: \"\",\n      isAddingPost: false,\n      isDeletingPost: false\n    });\n\n    _defineProperty(this, \"getPosts\", () => {\n      const {\n        auth\n      } = this.props;\n      getPostFeed(auth.user._id).then(posts => this.setState({\n        posts\n      }));\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      let inputValue;\n\n      if (event.target.name === \"image\") {\n        inputValue = event.target.files[0];\n      } else {\n        inputValue = event.target.value;\n      }\n\n      this.postData.set(event.target.name, inputValue);\n      this.setState({\n        [event.target.name]: inputValue\n      });\n    });\n\n    _defineProperty(this, \"handleAddPost\", () => {\n      const {\n        auth\n      } = this.props;\n      this.setState({\n        isAddingPost: true\n      });\n      addPost(auth.user._id, this.postData).then(postData => {\n        const updatedPosts = [postData, ...this.state.posts];\n        this.setState({\n          posts: updatedPosts,\n          isAddingPost: false,\n          text: \"\",\n          image: \"\"\n        });\n        this.postData.delete(\"image\");\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          isAddingPost: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleDeletePost\", deletedPost => {\n      this.setState({\n        isDeletingPost: true\n      });\n      deletePost(deletedPost._id).then(postData => {\n        const postIndex = this.state.posts.findIndex(post => post._id === postData._id);\n        const updatedPosts = [...this.state.posts.slice(0, postIndex), ...this.state.posts.slice(postIndex + 1)];\n        this.setState({\n          posts: updatedPosts,\n          isDeletingPost: false\n        });\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          isDeletingPost: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleToggleLike\", post => {\n      const {\n        auth\n      } = this.props;\n      const isPostLiked = post.likes.includes(auth.user._id);\n      const sendRequest = isPostLiked ? unlikePost : likePost;\n      sendRequest(post._id).then(postData => {\n        const postIndex = this.state.posts.findIndex(post => post._id === postData._id);\n        const updatedPosts = [...this.state.posts.slice(0, postIndex), postData, ...this.state.posts.slice(postIndex + 1)];\n        this.setState({\n          posts: updatedPosts\n        });\n      }).catch(err => console.error(err));\n    });\n\n    _defineProperty(this, \"handleAddComment\", (postId, text) => {\n      const comment = {\n        text\n      };\n      addComment(postId, comment).then(postData => {\n        const postIndex = this.state.posts.findIndex(post => post._id === postData._id);\n        const updatedPosts = [...this.state.posts.slice(0, postIndex), postData, ...this.state.posts.slice(postIndex + 1)];\n        this.setState({\n          posts: updatedPosts\n        });\n      }).catch(err => console.error(err));\n    });\n\n    _defineProperty(this, \"handleDeleteComment\", (postId, comment) => {\n      deleteComment(postId, comment).then(postData => {\n        const postIndex = this.state.posts.findIndex(post => post._id === postData._id);\n        const updatedPosts = [...this.state.posts.slice(0, postIndex), postData, ...this.state.posts.slice(postIndex + 1)];\n        this.setState({\n          posts: updatedPosts\n        });\n      }).catch(err => console.error(err));\n    });\n  }\n\n  componentDidMount() {\n    this.postData = new FormData();\n    this.getPosts();\n  }\n\n  render() {\n    const {\n      classes,\n      auth\n    } = this.props;\n    const {\n      posts,\n      text,\n      image,\n      isAddingPost,\n      isDeletingPost\n    } = this.state;\n    console.log(\"user post\", posts);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, posts.map(post => __jsx(Post, {\n      key: post._id,\n      auth: auth,\n      post: post,\n      isDeletingPost: isDeletingPost,\n      handleDeletePost: this.handleDeletePost,\n      handleToggleLike: this.handleToggleLike,\n      handleAddComment: this.handleAddComment,\n      handleDeleteComment: this.handleDeleteComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default PostFeed;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/PostFeed.js"],"names":["Post","addPost","deletePost","likePost","unlikePost","getPostFeed","addComment","deleteComment","PostFeed","React","Component","posts","text","image","isAddingPost","isDeletingPost","auth","props","user","_id","then","setState","event","inputValue","target","name","files","value","postData","set","updatedPosts","state","delete","catch","err","console","error","deletedPost","postIndex","findIndex","post","slice","isPostLiked","likes","includes","sendRequest","postId","comment","componentDidMount","FormData","getPosts","render","classes","log","map","handleDeletePost","handleToggleLike","handleAddComment","handleDeleteComment"],"mappings":"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","sourcesContent":["\n\n// import NewPost from \"./NewPost\";\nimport Post from \"./Post\";\nimport {\n  addPost,\n  deletePost,\n  likePost,\n  unlikePost,\n  getPostFeed,\n  addComment,\n  deleteComment\n} from \"../../lib/api\";\n\nclass PostFeed extends React.Component {\n  state = {\n    posts: [],\n    text: \"\",\n    image: \"\",\n    isAddingPost: false,\n    isDeletingPost: false\n  };\n\n  componentDidMount() {\n    this.postData = new FormData();\n    this.getPosts();\n  }\n\n  getPosts = () => {\n    const { auth } = this.props;\n\n    getPostFeed(auth.user._id).then(posts => this.setState({ posts }));\n  };\n\n  handleChange = event => {\n    let inputValue;\n\n    if (event.target.name === \"image\") {\n      inputValue = event.target.files[0];\n    } else {\n      inputValue = event.target.value;\n    }\n    this.postData.set(event.target.name, inputValue);\n    this.setState({ [event.target.name]: inputValue });\n  };\n\n  handleAddPost = () => {\n    const { auth } = this.props;\n\n    this.setState({ isAddingPost: true });\n    addPost(auth.user._id, this.postData)\n      .then(postData => {\n        const updatedPosts = [postData, ...this.state.posts];\n        this.setState({\n          posts: updatedPosts,\n          isAddingPost: false,\n          text: \"\",\n          image: \"\"\n        });\n        this.postData.delete(\"image\");\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ isAddingPost: false });\n      });\n  };\n\n  handleDeletePost = deletedPost => {\n    this.setState({ isDeletingPost: true });\n    deletePost(deletedPost._id)\n      .then(postData => {\n        const postIndex = this.state.posts.findIndex(\n          post => post._id === postData._id\n        );\n        const updatedPosts = [\n          ...this.state.posts.slice(0, postIndex),\n          ...this.state.posts.slice(postIndex + 1)\n        ];\n        this.setState({\n          posts: updatedPosts,\n          isDeletingPost: false\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ isDeletingPost: false });\n      });\n  };\n\n  handleToggleLike = post => {\n    const { auth } = this.props;\n\n    const isPostLiked = post.likes.includes(auth.user._id);\n    const sendRequest = isPostLiked ? unlikePost : likePost;\n    sendRequest(post._id)\n      .then(postData => {\n        const postIndex = this.state.posts.findIndex(\n          post => post._id === postData._id\n        );\n        const updatedPosts = [\n          ...this.state.posts.slice(0, postIndex),\n          postData,\n          ...this.state.posts.slice(postIndex + 1)\n        ];\n        this.setState({ posts: updatedPosts });\n      })\n      .catch(err => console.error(err));\n  };\n\n  handleAddComment = (postId, text) => {\n    const comment = { text };\n    addComment(postId, comment)\n      .then(postData => {\n        const postIndex = this.state.posts.findIndex(\n          post => post._id === postData._id\n        );\n        const updatedPosts = [\n          ...this.state.posts.slice(0, postIndex),\n          postData,\n          ...this.state.posts.slice(postIndex + 1)\n        ];\n        this.setState({ posts: updatedPosts });\n      })\n      .catch(err => console.error(err));\n  };\n\n  handleDeleteComment = (postId, comment) => {\n    deleteComment(postId, comment)\n      .then(postData => {\n        const postIndex = this.state.posts.findIndex(\n          post => post._id === postData._id\n        );\n        const updatedPosts = [\n          ...this.state.posts.slice(0, postIndex),\n          postData,\n          ...this.state.posts.slice(postIndex + 1)\n        ];\n        this.setState({ posts: updatedPosts });\n      })\n      .catch(err => console.error(err));\n  };\n\n  render() {\n    const { classes, auth } = this.props;\n    const { posts, text, image, isAddingPost, isDeletingPost } = this.state;\n    console.log(\"user post\",posts)\n\n    return (\n      <div >\n        {/* <Typography\n          variant=\"h4\"\n          component=\"h1\"\n          align=\"center\"\n          color=\"primary\"\n          \n        >\n          Post Feed\n        </Typography> */}\n        {/* <NewPost\n          auth={auth}\n          text={text}\n          image={image}\n          isAddingPost={isAddingPost}\n          handleChange={this.handleChange}\n          handleAddPost={this.handleAddPost}\n        />\n        {posts.map(post => (\n          <Post\n            key={post._id}\n            auth={auth}\n            post={post}\n            isDeletingPost={isDeletingPost}\n            handleDeletePost={this.handleDeletePost}\n            handleToggleLike={this.handleToggleLike}\n            handleAddComment={this.handleAddComment}\n            handleDeleteComment={this.handleDeleteComment}\n          />\n        ))} */}\n       {posts.map(post => (\n          <Post\n            key={post._id}\n            auth={auth}\n            post={post}\n            isDeletingPost={isDeletingPost}\n            handleDeletePost={this.handleDeletePost}\n            handleToggleLike={this.handleToggleLike}\n            handleAddComment={this.handleAddComment}\n            handleDeleteComment={this.handleDeleteComment}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\n\n\nexport default PostFeed;\n"]},"metadata":{},"sourceType":"module"}