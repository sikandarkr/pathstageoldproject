{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./task\";\nimport { Droppable } from \"react-beautiful-dnd\";\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n`;\nconst Title = styled.h3`\n  padding: 8px;\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  background-color: ${props => props.isDraggingOver ? \"skyblue\" : \"white\"};\n`;\n\nclass Dragable extends Component {\n  render() {\n    const {\n      index,\n      tasks\n    } = this.props;\n    return __jsx(Container, null, __jsx(Title, null, \"New Dropable\"), __jsx(Droppable, {\n      droppableId: \"1\"\n    }, (provided, snapshot) => {\n      return __jsx(TaskList, _extends({\n        ref: provided.innerRef\n      }, provided.droppableProps, {\n        isDraggingOver: snapshot.isDraggingOver\n      }), tasks.map((column, index) => {\n        console.log(\"column  \", column);\n        return null;\n        return __jsx(Task, {\n          key: column.id,\n          task: column,\n          index: index\n        });\n      }), provided.placeholder);\n    }));\n    return __jsx(Container, null, __jsx(Title, null, this.props.column.content), __jsx(Droppable, {\n      droppableId: this.props.column.id\n    }, (provided, snapshot) => {\n      console.log(\"provided\", provided);\n      console.log(\"snapshot  => \", snapshot); // return null;\n\n      return __jsx(TaskList, _extends({\n        ref: provided.innerRef\n      }, provided.droppableProps, {\n        isDraggingOver: snapshot.isDraggingOver\n      }), this.props.tasks.map((task, index) => __jsx(Task, {\n        key: task.id,\n        task: task,\n        index: index\n      })), provided.placeholder);\n    })); // return this.props.column.title;\n  }\n\n}\n\nexport default Dragable;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/exampl/components/DragableExample/column.js"],"names":["React","Component","styled","Task","Droppable","Container","div","Title","h3","TaskList","props","isDraggingOver","Dragable","render","index","tasks","provided","snapshot","innerRef","droppableProps","map","column","console","log","id","placeholder","content","task"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;;;CAA7B;AAKA,MAAMC,KAAK,GAAGL,MAAM,CAACM,EAAG;;CAAxB;AAGA,MAAMC,QAAQ,GAAGP,MAAM,CAACI,GAAI;;sBAENI,KAAK,IAAKA,KAAK,CAACC,cAAN,GAAuB,SAAvB,GAAmC,OAAS;CAF5E;;AAIA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAC/BY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKL,KAA9B;AACA,WACE,MAAC,SAAD,QACE,MAAC,KAAD,QAAQ,cAAR,CADF,EAEE,MAAC,SAAD;AAAW,MAAA,WAAW,EAAE;AAAxB,OACG,CAACM,QAAD,EAAWC,QAAX,KAAwB;AACvB,aACE,MAAC,QAAD;AAAU,QAAA,GAAG,EAAED,QAAQ,CAACE;AAAxB,SAAsCF,QAAQ,CAACG,cAA/C;AAA+D,QAAA,cAAc,EAAEF,QAAQ,CAACN;AAAxF,UACGI,KAAK,CAACK,GAAN,CAAU,CAACC,MAAD,EAASP,KAAT,KAAmB;AAC5BQ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACA,eAAO,IAAP;AACA,eAAO,MAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,MAAM,CAACG,EAAlB;AAAsB,UAAA,IAAI,EAAEH,MAA5B;AAAoC,UAAA,KAAK,EAAEP;AAA3C,UAAP;AACD,OAJA,CADH,EAMGE,QAAQ,CAACS,WANZ,CADF;AAUD,KAZH,CAFF,CADF;AAoBA,WACE,MAAC,SAAD,QACE,MAAC,KAAD,QAAQ,KAAKf,KAAL,CAAWW,MAAX,CAAkBK,OAA1B,CADF,EAEE,MAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWW,MAAX,CAAkBG;AAA1C,OACG,CAACR,QAAD,EAAWC,QAAX,KAAwB;AACvBK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,QAAxB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,QAA7B,EAFuB,CAGvB;;AACA,aACE,MAAC,QAAD;AAAU,QAAA,GAAG,EAAED,QAAQ,CAACE;AAAxB,SAAsCF,QAAQ,CAACG,cAA/C;AAA+D,QAAA,cAAc,EAAEF,QAAQ,CAACN;AAAxF,UACG,KAAKD,KAAL,CAAWK,KAAX,CAAiBK,GAAjB,CAAqB,CAACO,IAAD,EAAOb,KAAP,KACpB,MAAC,IAAD;AAAM,QAAA,GAAG,EAAEa,IAAI,CAACH,EAAhB;AAAoB,QAAA,IAAI,EAAEG,IAA1B;AAAgC,QAAA,KAAK,EAAEb;AAAvC,QADD,CADH,EAIGE,QAAQ,CAACS,WAJZ,CADF;AAQD,KAbH,CAFF,CADF,CAtBO,CA0CP;AACD;;AA5C8B;;AA8CjC,eAAeb,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./task\";\nimport { Droppable } from \"react-beautiful-dnd\";\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n`;\nconst Title = styled.h3`\n  padding: 8px;\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  background-color: ${props => (props.isDraggingOver ? \"skyblue\" : \"white\")};\n`;\nclass Dragable extends Component {\n  render() {\n    const { index, tasks } = this.props;\n    return (\n      <Container>\n        <Title>{\"New Dropable\"}</Title>\n        <Droppable droppableId={\"1\"}>\n          {(provided, snapshot) => {\n            return (\n              <TaskList ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}>\n                {tasks.map((column, index) => {\n                  console.log(\"column  \", column);\n                  return null;\n                  return <Task key={column.id} task={column} index={index} />;\n                })}\n                {provided.placeholder}\n              </TaskList>\n            );\n          }}\n        </Droppable>\n      </Container>\n    );\n\n    return (\n      <Container>\n        <Title>{this.props.column.content}</Title>\n        <Droppable droppableId={this.props.column.id}>\n          {(provided, snapshot) => {\n            console.log(\"provided\", provided);\n            console.log(\"snapshot  => \", snapshot);\n            // return null;\n            return (\n              <TaskList ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}>\n                {this.props.tasks.map((task, index) => (\n                  <Task key={task.id} task={task} index={index} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            );\n          }}\n        </Droppable>\n      </Container>\n    );\n    // return this.props.column.title;\n  }\n}\nexport default Dragable;\n"]},"metadata":{},"sourceType":"module"}