{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\";\nimport SideMenuLeft from \"../Common/SideMenuLeft\";\nimport PreviewModel from \"../Common/PreviewModal\";\nimport PostCard from \"../Common/PostCard\"; // import \"../../static/css/style.scss\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isModal: false\n    });\n\n    _defineProperty(this, \"showModal\", () => {\n      console.log(\"works\");\n      this.setState({\n        isModal: true\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        isModal: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchProfiles();\n  }\n\n  render() {\n    const {\n      users\n    } = this.props;\n    const {\n      isModal\n    } = this.state;\n    return __jsx(_Layout, {\n      className: isModal ? \"dark-mode\" : \"normal-mode\"\n    }, __jsx(_Row, null, __jsx(_Col, {\n      className: \"side-menu-left\",\n      span: 4\n    }, __jsx(SideMenuLeft, {\n      showModal: this.showModal\n    })), __jsx(_Col, {\n      span: 10,\n      className: \"post-list\"\n    }, this.state.list ? this.state.list.map((i, j) => {\n      return __jsx(_Row, null, __jsx(PostCard, null));\n    }) : null), __jsx(_Col, {\n      span: 10\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.profiles\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProfiles: data => {\n      dispatch(fetchProfiles(data));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/backup/exampl/components/Layout/Dashboard.js"],"names":["React","Component","fetchProfiles","connect","SideMenuLeft","PreviewModel","PostCard","Dashboard","isModal","console","log","setState","componentDidMount","props","render","users","state","showModal","list","map","i","j","mapStateToProps","profiles","mapDispatchToProps","dispatch","data"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CACA;;AACA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACxB;AACNO,MAAAA,OAAO,EAAE;AADH,KADwB;;AAAA,uCAQpB,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAX+B;;AAAA,wCAYnB,MAAM;AACjB,WAAKG,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAd+B;AAAA;;AAKhCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWX,aAAX;AACD;;AASDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAc,KAAKQ,KAAzB;AACA,WACE;AAAQ,MAAA,SAAS,EAAER,OAAO,GAAG,WAAH,GAAiB;AAA3C,OACE,kBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,IAAI,EAAE;AAAtC,OACE,MAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKS;AAA9B,MADF,CADF,EAIE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,SAAS,EAAC;AAAzB,OACG,KAAKD,KAAL,CAAWE,IAAX,GACG,KAAKF,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC5B,aACE,kBACE,MAAC,QAAD,OADF,CADF;AAKD,KAND,CADH,GAQG,IATN,CAJF,EAeE;AAAK,MAAA,IAAI,EAAE;AAAX,MAfF,CADF,CADF;AAsBD;;AAzC+B;;AA2ClC,MAAMC,eAAe,GAAIN,KAAD,IAAW;AACjC,SAAO;AACLD,IAAAA,KAAK,EAAEC,KAAK,CAACO;AADR,GAAP;AAGD,CAJD;;AAKA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLvB,IAAAA,aAAa,EAAGwB,IAAD,IAAU;AACvBD,MAAAA,QAAQ,CAACvB,aAAa,CAACwB,IAAD,CAAd,CAAR;AACD;AAHI,GAAP;AAKD;;AACD,eAAevB,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb, Icon, Row, Col, Layout, Card, Carousel, Input, Button, Divider } from \"antd\";\nimport { fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\";\nimport SideMenuLeft from \"../Common/SideMenuLeft\";\nimport PreviewModel from \"../Common/PreviewModal\";\nimport PostCard from \"../Common/PostCard\";\n// import \"../../static/css/style.scss\";\nclass Dashboard extends Component {\n  state = {\n    isModal: false,\n  };\n\n  componentDidMount() {\n    this.props.fetchProfiles();\n  }\n  showModal = () => {\n    console.log(\"works\");\n    this.setState({ isModal: true });\n  };\n  closeModal = () => {\n    this.setState({ isModal: false });\n  };\n\n  render() {\n    const { users } = this.props;\n    const { isModal } = this.state;\n    return (\n      <Layout className={isModal ? \"dark-mode\" : \"normal-mode\"}>\n        <Row>\n          <Col className=\"side-menu-left\" span={4}>\n            <SideMenuLeft showModal={this.showModal} />\n          </Col>\n          <Col span={10} className=\"post-list\">\n            {this.state.list\n              ? this.state.list.map((i, j) => {\n                  return (\n                    <Row>\n                      <PostCard />\n                    </Row>\n                  );\n                })\n              : null}\n          </Col>\n          <Col span={10}></Col>\n        </Row>\n        {/* {isModal ? <PreviewModel closeModal={this.closeModal} /> : \"\"} */}\n      </Layout>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    users: state.profiles,\n  };\n};\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProfiles: (data) => {\n      dispatch(fetchProfiles(data));\n    },\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}