{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./task\";\nimport { Droppable } from \"react-beautiful-dnd\";\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n`;\nconst Title = styled.h3`\n  padding: 8px;\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  background-color: ${props => props.isDraggingOver ? \"skyblue\" : \"white\"};\n`;\n\nclass Dragable extends Component {\n  render() {\n    const {\n      index,\n      tasks\n    } = this.props;\n    console.log(\"Your id is #####\", tasks[0].id);\n    return __jsx(Container, null, __jsx(Title, null, \"New Dropable\"), __jsx(Droppable, {\n      droppableId: tasks[0].id\n    }, (provided, snapshot) => {\n      return __jsx(TaskList, _extends({\n        ref: provided.innerRef\n      }, provided.droppableProps, {\n        isDraggingOver: snapshot.isDraggingOver\n      }), tasks.map((column, index) => {\n        return __jsx(Task, {\n          key: column.id,\n          task: column,\n          index: index\n        });\n      }), provided.placeholder);\n    })); // return this.props.column.title;\n  }\n\n}\n\nexport default Dragable;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/exampl/components/DragableExample/column.js"],"names":["React","Component","styled","Task","Droppable","Container","div","Title","h3","TaskList","props","isDraggingOver","Dragable","render","index","tasks","console","log","id","provided","snapshot","innerRef","droppableProps","map","column","placeholder"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;;;CAA7B;AAKA,MAAMC,KAAK,GAAGL,MAAM,CAACM,EAAG;;CAAxB;AAGA,MAAMC,QAAQ,GAAGP,MAAM,CAACI,GAAI;;sBAENI,KAAK,IAAKA,KAAK,CAACC,cAAN,GAAuB,SAAvB,GAAmC,OAAS;CAF5E;;AAIA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAC/BY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKL,KAA9B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAK,CAAC,CAAD,CAAL,CAASG,EAAzC;AACA,WACE,MAAC,SAAD,QACE,MAAC,KAAD,QAAQ,cAAR,CADF,EAEE,MAAC,SAAD;AAAW,MAAA,WAAW,EAAEH,KAAK,CAAC,CAAD,CAAL,CAASG;AAAjC,OACG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACvB,aACE,MAAC,QAAD;AAAU,QAAA,GAAG,EAAED,QAAQ,CAACE;AAAxB,SAAsCF,QAAQ,CAACG,cAA/C;AAA+D,QAAA,cAAc,EAAEF,QAAQ,CAACT;AAAxF,UACGI,KAAK,CAACQ,GAAN,CAAU,CAACC,MAAD,EAASV,KAAT,KAAmB;AAC5B,eAAO,MAAC,IAAD;AAAM,UAAA,GAAG,EAAEU,MAAM,CAACN,EAAlB;AAAsB,UAAA,IAAI,EAAEM,MAA5B;AAAoC,UAAA,KAAK,EAAEV;AAA3C,UAAP;AACD,OAFA,CADH,EAIGK,QAAQ,CAACM,WAJZ,CADF;AAQD,KAVH,CAFF,CADF,CAHO,CAqBP;AACD;;AAvB8B;;AAyBjC,eAAeb,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./task\";\nimport { Droppable } from \"react-beautiful-dnd\";\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n`;\nconst Title = styled.h3`\n  padding: 8px;\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  background-color: ${props => (props.isDraggingOver ? \"skyblue\" : \"white\")};\n`;\nclass Dragable extends Component {\n  render() {\n    const { index, tasks } = this.props;\n    console.log(\"Your id is #####\", tasks[0].id);\n    return (\n      <Container>\n        <Title>{\"New Dropable\"}</Title>\n        <Droppable droppableId={tasks[0].id}>\n          {(provided, snapshot) => {\n            return (\n              <TaskList ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}>\n                {tasks.map((column, index) => {\n                  return <Task key={column.id} task={column} index={index} />;\n                })}\n                {provided.placeholder}\n              </TaskList>\n            );\n          }}\n        </Droppable>\n      </Container>\n    );\n\n    // return this.props.column.title;\n  }\n}\nexport default Dragable;\n"]},"metadata":{},"sourceType":"module"}