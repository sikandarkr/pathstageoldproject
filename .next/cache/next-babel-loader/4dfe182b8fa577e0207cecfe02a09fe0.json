{"ast":null,"code":"var __jsx = React.createElement;\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport withRedux from \"next-redux-wrapper\";\nimport store from '../redux/store';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}; //Anything returned here can be accessed by the client\n\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(Component, pageProps));\n  }\n\n} //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/exampl/pages/_app.js"],"names":["App","Provider","React","withRedux","store","MyApp","getInitialProps","Component","ctx","pageProps","render","props","makeStore"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,KAAN,SAAoBL,GAApB,CAAwB;AAEpB,eAAaM,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA7B,EAA+C;AAC3C,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF,CAD2C,CAG3C;;AACA,WAAO;AAACC,MAAAA,SAAS,EAAEA;AAAZ,KAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAACH,MAAAA,SAAD;AAAYE,MAAAA,SAAZ;AAAuBL,MAAAA;AAAvB,QAAgC,KAAKO,KAA3C;AAEA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEP;AAAjB,OACI,MAAC,SAAD,EAAeK,SAAf,CADJ,CADJ;AAKH;;AAlBmB,C,CAqBxB;;;AACA,MAAMG,SAAS,GAAG,MAAMR,KAAxB,C,CAEA;;;AACA,eAAeD,SAAS,CAACS,SAAD,CAAT,CAAqBP,KAArB,CAAf","sourcesContent":["import App from 'next/app';\nimport {Provider} from 'react-redux';\nimport React from 'react';\nimport withRedux from \"next-redux-wrapper\";\nimport store from '../redux/store';\n\nclass MyApp extends App {\n\n    static async getInitialProps({Component, ctx}) {\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        //Anything returned here can be accessed by the client\n        return {pageProps: pageProps};\n    }\n\n    render() {\n        //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n        const {Component, pageProps, store} = this.props;\n\n        return (\n            <Provider store={store}>\n                <Component {...pageProps}/>\n            </Provider>\n        );\n    }\n}\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => store;\n\n//withRedux wrapper that passes the store to the App Component\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}