{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/CardComment.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { LikeOutlined, CommentOutlined, ShareAltOutlined } from \"@ant-design/icons\";\nimport Input from '../Common/Input';\n\nvar CardComment = /*#__PURE__*/function (_Component) {\n  _inherits(CardComment, _Component);\n\n  var _super = _createSuper(CardComment);\n\n  function CardComment() {\n    var _this;\n\n    _classCallCheck(this, CardComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"showComment\", function (comment) {\n      var _this$props = _this.props,\n          postId = _this$props.postId,\n          auth = _this$props.auth,\n          classes = _this$props.classes,\n          handleDeleteComment = _this$props.handleDeleteComment;\n      var isCommentCreator = comment.postedBy._id === auth.user._id;\n      return __jsx(React.Fragment, null, comment ? comment.map(function (comment) {\n        retuen(__jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"comment-header-img\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }\n        }), __jsx(\"div\", {\n          className: \"comment-list-container\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }\n        }, __jsx(\"span\", {\n          className: \"commentor-name\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }\n        }, \"Sikandar\"), __jsx(\"span\", {\n          classsName: \"comment-time\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }\n        }, \"  3 hours ago\"), __jsx(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }\n        }, comment.text))));\n      }) : null);\n    });\n\n    return _this;\n  }\n\n  _createClass(CardComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          auth = _this$props2.auth,\n          comments = _this$props2.comments,\n          classes = _this$props2.classes;\n      console.log(\"all the comments... \", comments);\n      return __jsx(\"div\", {\n        className: \"card-comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"comment-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"comment-header-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: \"/static/images/profile.jpeg\",\n        className: \"profile-header-post-pic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      })), __jsx(\"div\", {\n        className: \"comment-input-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, __jsx(Input, {\n        placeholder: \"Write Review *\",\n        name: \"comment\",\n        type: \"text\",\n        inputCss: \"post-comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }))), __jsx(\"div\", {\n        className: \"comment-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, this.showComment(comments)));\n    }\n  }]);\n\n  return CardComment;\n}(Component);\n\nexport default CardComment;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/CardComment.js"],"names":["React","Component","LikeOutlined","CommentOutlined","ShareAltOutlined","Input","CardComment","comment","props","postId","auth","classes","handleDeleteComment","isCommentCreator","postedBy","_id","user","map","retuen","text","comments","console","log","showComment"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,SAASC,YAAT,EAAsBC,eAAtB,EAAsCC,gBAAtC,QAA+D,mBAA/D;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;IACMC,W;;;;;;;;;;;;;;;;kEAGU,UAACC,OAAD,EAAW;AAAA,wBACoC,MAAKC,KADzC;AAAA,UACXC,MADW,eACXA,MADW;AAAA,UACHC,IADG,eACHA,IADG;AAAA,UACGC,OADH,eACGA,OADH;AAAA,UACYC,mBADZ,eACYA,mBADZ;AAEnB,UAAMC,gBAAgB,GAAGN,OAAO,CAACO,QAAR,CAAiBC,GAAjB,KAAyBL,IAAI,CAACM,IAAL,CAAUD,GAA5D;AACA,aACI,4BACXR,OAAO,GAACA,OAAO,CAACU,GAAR,CAAY,UAAAV,OAAO,EAAE;AAC1BW,QAAAA,MAAM,CACF,4BACA;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAKA;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAM,UAAA,UAAU,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIX,OAAO,CAACY,IAAZ,CAHJ,CALA,CADE,CAAN;AAaH,OAdQ,CAAD,GAcL,IAfS,CADJ;AAmBH,K;;;;;;;6BAEO;AAAA,yBACgC,KAAKX,KADrC;AAAA,UACIE,IADJ,gBACIA,IADJ;AAAA,UACUU,QADV,gBACUA,QADV;AAAA,UACoBT,OADpB,gBACoBA,OADpB;AAEJU,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCF,QAAnC;AACA,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,6BAAT;AAAwC,QAAA,SAAS,EAAC,yBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,WAAW,EAAC,gBAAnB;AAAoC,QAAA,IAAI,EAAC,SAAzC;AAAmD,QAAA,IAAI,EAAC,MAAxD;AAA+D,QAAA,QAAQ,EAAC,cAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ,EASI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKG,WAAL,CAAiBH,QAAjB,CADJ,CATJ,CADJ;AAeH;;;;EA7CqBnB,S;;AAgD1B,eAAeK,WAAf","sourcesContent":["import React,{Component} from 'react';\nimport { Badge } from \"antd\";\nimport { LikeOutlined,CommentOutlined,ShareAltOutlined  } from \"@ant-design/icons\";\nimport Input from '../Common/Input';\nclass CardComment extends Component{\n\n\n    showComment=(comment)=>{\n        const { postId, auth, classes, handleDeleteComment } = this.props;\n        const isCommentCreator = comment.postedBy._id === auth.user._id;\n        return (\n            <>\n{comment?comment.map(comment=>{\n    retuen (\n        <>\n        <div className=\"comment-header-img\">\n        \n        {/* <img src={comment.postedBy.avatar}  className=\"profile-header-post-pic\"/> */}\n        </div>\n        <div className=\"comment-list-container\">\n            <span className=\"commentor-name\">Sikandar</span>\n            <span classsName=\"comment-time\">  3 hours ago</span>\n            <p>{comment.text}</p>\n        </div>\n    </>\n    )\n}):null}\n            </>\n        )\n    }\n\n    render(){\n        const { auth, comments, classes } = this.props;\n        console.log(\"all the comments... \",comments);\n        return(\n            <div className=\"card-comment\">   \n                <div className=\"comment-input\">\n                    <div className=\"comment-header-img\">\n                        <img src=\"/static/images/profile.jpeg\"  className=\"profile-header-post-pic\"/>\n                    </div>\n                    <div className=\"comment-input-container\">\n                        <Input placeholder=\"Write Review *\" name=\"comment\" type=\"text\" inputCss=\"post-comment\"   />\n                    </div>\n                </div>\n                <div className=\"comment-list\">\n                   {this.showComment(comments)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardComment;"]},"metadata":{},"sourceType":"module"}