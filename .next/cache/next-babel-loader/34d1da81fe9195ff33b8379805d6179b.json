{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/PostFeed.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// import NewPost from \"./NewPost\";\nimport Post from \"./Post\";\nimport { addPost, deletePost, likePost, unlikePost, getPostFeed, addComment, deleteComment } from \"../../lib/api\";\n\nvar PostFeed = /*#__PURE__*/function (_React$Component) {\n  _inherits(PostFeed, _React$Component);\n\n  var _super = _createSuper(PostFeed);\n\n  function PostFeed() {\n    var _this;\n\n    _classCallCheck(this, PostFeed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      posts: [],\n      text: \"\",\n      image: \"\",\n      isAddingPost: false,\n      isDeletingPost: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPosts\", function () {\n      var auth = _this.props.auth;\n      getPostFeed(auth.user._id).then(function (posts) {\n        return _this.setState({\n          posts: posts\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var inputValue;\n\n      if (event.target.name === \"image\") {\n        inputValue = event.target.files[0];\n      } else {\n        inputValue = event.target.value;\n      }\n\n      _this.postData.set(event.target.name, inputValue);\n\n      _this.setState(_defineProperty({}, event.target.name, inputValue));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddPost\", function () {\n      var auth = _this.props.auth;\n\n      _this.setState({\n        isAddingPost: true\n      });\n\n      addPost(auth.user._id, _this.postData).then(function (postData) {\n        var updatedPosts = [postData].concat(_toConsumableArray(_this.state.posts));\n\n        _this.setState({\n          posts: updatedPosts,\n          isAddingPost: false,\n          text: \"\",\n          image: \"\"\n        });\n\n        _this.postData[\"delete\"](\"image\");\n      })[\"catch\"](function (err) {\n        console.error(err);\n\n        _this.setState({\n          isAddingPost: false\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeletePost\", function (deletedPost) {\n      _this.setState({\n        isDeletingPost: true\n      });\n\n      deletePost(deletedPost._id).then(function (postData) {\n        var postIndex = _this.state.posts.findIndex(function (post) {\n          return post._id === postData._id;\n        });\n\n        var updatedPosts = [].concat(_toConsumableArray(_this.state.posts.slice(0, postIndex)), _toConsumableArray(_this.state.posts.slice(postIndex + 1)));\n\n        _this.setState({\n          posts: updatedPosts,\n          isDeletingPost: false\n        });\n      })[\"catch\"](function (err) {\n        console.error(err);\n\n        _this.setState({\n          isDeletingPost: false\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleToggleLike\", function (post) {\n      var auth = _this.props.auth;\n      var isPostLiked = post.likes.includes(auth.user._id);\n      var sendRequest = isPostLiked ? unlikePost : likePost;\n      sendRequest(post._id).then(function (postData) {\n        var postIndex = _this.state.posts.findIndex(function (post) {\n          return post._id === postData._id;\n        });\n\n        var updatedPosts = [].concat(_toConsumableArray(_this.state.posts.slice(0, postIndex)), [postData], _toConsumableArray(_this.state.posts.slice(postIndex + 1)));\n\n        _this.setState({\n          posts: updatedPosts\n        });\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddComment\", function (postId, text) {\n      var comment = {\n        text: text\n      };\n      addComment(postId, comment).then(function (postData) {\n        var postIndex = _this.state.posts.findIndex(function (post) {\n          return post._id === postData._id;\n        });\n\n        var updatedPosts = [].concat(_toConsumableArray(_this.state.posts.slice(0, postIndex)), [postData], _toConsumableArray(_this.state.posts.slice(postIndex + 1)));\n\n        _this.setState({\n          posts: updatedPosts\n        });\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteComment\", function (postId, comment) {\n      deleteComment(postId, comment).then(function (postData) {\n        var postIndex = _this.state.posts.findIndex(function (post) {\n          return post._id === postData._id;\n        });\n\n        var updatedPosts = [].concat(_toConsumableArray(_this.state.posts.slice(0, postIndex)), [postData], _toConsumableArray(_this.state.posts.slice(postIndex + 1)));\n\n        _this.setState({\n          posts: updatedPosts\n        });\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PostFeed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.postData = new FormData();\n      this.getPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          auth = _this$props.auth;\n      var _this$state = this.state,\n          posts = _this$state.posts,\n          text = _this$state.text,\n          image = _this$state.image,\n          isAddingPost = _this$state.isAddingPost,\n          isDeletingPost = _this$state.isDeletingPost;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }\n      }, __jsx(Post, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return PostFeed;\n}(React.Component);\n\nexport default PostFeed;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/PostFeed.js"],"names":["Post","addPost","deletePost","likePost","unlikePost","getPostFeed","addComment","deleteComment","PostFeed","posts","text","image","isAddingPost","isDeletingPost","auth","props","user","_id","then","setState","event","inputValue","target","name","files","value","postData","set","updatedPosts","state","err","console","error","deletedPost","postIndex","findIndex","post","slice","isPostLiked","likes","includes","sendRequest","postId","comment","FormData","getPosts","classes","React","Component"],"mappings":"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","sourcesContent":["\n\n// import NewPost from \"./NewPost\";\nimport Post from \"./Post\";\nimport {\n  addPost,\n  deletePost,\n  likePost,\n  unlikePost,\n  getPostFeed,\n  addComment,\n  deleteComment\n} from \"../../lib/api\";\n\nclass PostFeed extends React.Component {\n  state = {\n    posts: [],\n    text: \"\",\n    image: \"\",\n    isAddingPost: false,\n    isDeletingPost: false\n  };\n\n  componentDidMount() {\n    this.postData = new FormData();\n    this.getPosts();\n  }\n\n  getPosts = () => {\n    const { auth } = this.props;\n\n    getPostFeed(auth.user._id).then(posts => this.setState({ posts }));\n  };\n\n  handleChange = event => {\n    let inputValue;\n\n    if (event.target.name === \"image\") {\n      inputValue = event.target.files[0];\n    } else {\n      inputValue = event.target.value;\n    }\n    this.postData.set(event.target.name, inputValue);\n    this.setState({ [event.target.name]: inputValue });\n  };\n\n  handleAddPost = () => {\n    const { auth } = this.props;\n\n    this.setState({ isAddingPost: true });\n    addPost(auth.user._id, this.postData)\n      .then(postData => {\n        const updatedPosts = [postData, ...this.state.posts];\n        this.setState({\n          posts: updatedPosts,\n          isAddingPost: false,\n          text: \"\",\n          image: \"\"\n        });\n        this.postData.delete(\"image\");\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ isAddingPost: false });\n      });\n  };\n\n  handleDeletePost = deletedPost => {\n    this.setState({ isDeletingPost: true });\n    deletePost(deletedPost._id)\n      .then(postData => {\n        const postIndex = this.state.posts.findIndex(\n          post => post._id === postData._id\n        );\n        const updatedPosts = [\n          ...this.state.posts.slice(0, postIndex),\n          ...this.state.posts.slice(postIndex + 1)\n        ];\n        this.setState({\n          posts: updatedPosts,\n          isDeletingPost: false\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ isDeletingPost: false });\n      });\n  };\n\n  handleToggleLike = post => {\n    const { auth } = this.props;\n\n    const isPostLiked = post.likes.includes(auth.user._id);\n    const sendRequest = isPostLiked ? unlikePost : likePost;\n    sendRequest(post._id)\n      .then(postData => {\n        const postIndex = this.state.posts.findIndex(\n          post => post._id === postData._id\n        );\n        const updatedPosts = [\n          ...this.state.posts.slice(0, postIndex),\n          postData,\n          ...this.state.posts.slice(postIndex + 1)\n        ];\n        this.setState({ posts: updatedPosts });\n      })\n      .catch(err => console.error(err));\n  };\n\n  handleAddComment = (postId, text) => {\n    const comment = { text };\n    addComment(postId, comment)\n      .then(postData => {\n        const postIndex = this.state.posts.findIndex(\n          post => post._id === postData._id\n        );\n        const updatedPosts = [\n          ...this.state.posts.slice(0, postIndex),\n          postData,\n          ...this.state.posts.slice(postIndex + 1)\n        ];\n        this.setState({ posts: updatedPosts });\n      })\n      .catch(err => console.error(err));\n  };\n\n  handleDeleteComment = (postId, comment) => {\n    deleteComment(postId, comment)\n      .then(postData => {\n        const postIndex = this.state.posts.findIndex(\n          post => post._id === postData._id\n        );\n        const updatedPosts = [\n          ...this.state.posts.slice(0, postIndex),\n          postData,\n          ...this.state.posts.slice(postIndex + 1)\n        ];\n        this.setState({ posts: updatedPosts });\n      })\n      .catch(err => console.error(err));\n  };\n\n  render() {\n    const { classes, auth } = this.props;\n    const { posts, text, image, isAddingPost, isDeletingPost } = this.state;\n\n    return (\n      <div >\n        {/* <Typography\n          variant=\"h4\"\n          component=\"h1\"\n          align=\"center\"\n          color=\"primary\"\n          \n        >\n          Post Feed\n        </Typography> */}\n        {/* <NewPost\n          auth={auth}\n          text={text}\n          image={image}\n          isAddingPost={isAddingPost}\n          handleChange={this.handleChange}\n          handleAddPost={this.handleAddPost}\n        />\n        {posts.map(post => (\n          <Post\n            key={post._id}\n            auth={auth}\n            post={post}\n            isDeletingPost={isDeletingPost}\n            handleDeletePost={this.handleDeletePost}\n            handleToggleLike={this.handleToggleLike}\n            handleAddComment={this.handleAddComment}\n            handleDeleteComment={this.handleDeleteComment}\n          />\n        ))} */}\n        <Post/> \n      </div>\n    );\n  }\n}\n\n\n\nexport default PostFeed;\n"]},"metadata":{},"sourceType":"module"}