{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\"; // import \"../../static/css/style.scss\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"displayList\", data => {\n      var _data$users$data;\n\n      console.log(\"your data is.....\", (_data$users$data = data.users.data) === null || _data$users$data === void 0 ? void 0 : _data$users$data.data.users.data);\n      const list = data.users.map((item, index) => __jsx(\"div\", {\n        key: item.id\n      }, __jsx(\"p\", null, \"aaaa\"))); // return list;\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchProfiles();\n  }\n\n  render() {\n    const {\n      users\n    } = this.props;\n    return __jsx(_Layout, null, __jsx(_Row, null, __jsx(_Col, {\n      span: 8,\n      md: 8,\n      xs: 24\n    }, \"Dashboard\"), __jsx(_Col, {\n      span: 12,\n      md: 12,\n      xs: 24\n    }, __jsx(_Row, null, this.props.users && this.displayList(users))), __jsx(_Col, {\n      span: 4,\n      md: 4,\n      xs: 24\n    }, \"Dashboard\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.profiles\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProfiles: data => {\n      dispatch(fetchProfiles(data));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/backup/exampl/components/Layout/Dashboard.js"],"names":["React","Component","fetchProfiles","connect","Dashboard","data","console","log","users","list","map","item","index","id","componentDidMount","props","render","displayList","mapStateToProps","state","profiles","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,yCAIlBI,IAAI,IAAI;AAAA;;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,sBAAiCF,IAAI,CAACG,KAAL,CAAWH,IAA5C,qDAAiC,iBAAiBA,IAAjB,CAAsBG,KAAtB,CAA4BH,IAA7D;AACA,YAAMI,IAAI,GAAGJ,IAAI,CAACG,KAAL,CAAWE,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAC1B;AAAK,QAAA,GAAG,EAAED,IAAI,CAACE;AAAf,SACE,wBADF,CADW,CAAb,CAFoB,CAOpB;AACD,KAZ+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWb,aAAX;AACD;;AAUDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAY,KAAKO,KAAvB;AACA,WACE,qBACE,kBACE;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,EAAE,EAAE,CAAlB;AAAqB,MAAA,EAAE,EAAE;AAAzB,mBADF,EAIE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,EAAE,EAAE,EAAnB;AAAuB,MAAA,EAAE,EAAE;AAA3B,OACE,kBAAM,KAAKA,KAAL,CAAWP,KAAX,IAAoB,KAAKS,WAAL,CAAiBT,KAAjB,CAA1B,CADF,CAJF,EAOE;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,EAAE,EAAE,CAAlB;AAAqB,MAAA,EAAE,EAAE;AAAzB,mBAPF,CADF,CADF;AAeD;;AA9B+B;;AAgClC,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,KAAK,EAAEW,KAAK,CAACC;AADR,GAAP;AAGD,CAJD;;AAKA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLpB,IAAAA,aAAa,EAAEG,IAAI,IAAI;AACrBiB,MAAAA,QAAQ,CAACpB,aAAa,CAACG,IAAD,CAAd,CAAR;AACD;AAHI,GAAP;AAKD;;AACD,eAAeF,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb, Icon, Row, Col, Layout, Card, Carousel, Input, Button, Divider } from \"antd\";\nimport { fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\";\n// import \"../../static/css/style.scss\";\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.fetchProfiles();\n  }\n  displayList = data => {\n    console.log(\"your data is.....\", data.users.data?.data.users.data);\n    const list = data.users.map((item, index) => (\n      <div key={item.id}>\n        <p>aaaa</p>\n      </div>\n    ));\n    // return list;\n  };\n  render() {\n    const { users } = this.props;\n    return (\n      <Layout>\n        <Row>\n          <Col span={8} md={8} xs={24}>\n            Dashboard\n          </Col>\n          <Col span={12} md={12} xs={24}>\n            <Row>{this.props.users && this.displayList(users)}</Row>\n          </Col>\n          <Col span={4} md={4} xs={24}>\n            Dashboard\n          </Col>\n        </Row>\n      </Layout>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    users: state.profiles\n  };\n};\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProfiles: data => {\n      dispatch(fetchProfiles(data));\n    }\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}