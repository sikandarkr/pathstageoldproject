{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Comments.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\n\nvar Comments = /*#__PURE__*/function (_React$Component) {\n  _inherits(Comments, _React$Component);\n\n  var _super = _createSuper(Comments);\n\n  function Comments() {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      text: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (event) {\n      var text = _this.state.text;\n      var _this$props = _this.props,\n          postId = _this$props.postId,\n          handleAddComment = _this$props.handleAddComment;\n      event.preventDefault();\n      handleAddComment(postId, text);\n\n      _this.setState({\n        text: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showComment\", function (comment) {\n      var _this$props2 = _this.props,\n          postId = _this$props2.postId,\n          auth = _this$props2.auth,\n          classes = _this$props2.classes,\n          handleDeleteComment = _this$props2.handleDeleteComment;\n      var isCommentCreator = comment.postedBy._id === auth.user._id;\n      return __jsx(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, __jsx(Link, {\n        href: \"/profile/\".concat(comment.postedBy._id),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, comment.postedBy.name)), __jsx(\"br\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }), comment.text, __jsx(\"span\", {\n        className: classes.commentDate,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, _this.formatTimeCreated(comment.createdAt), isCommentCreator && __jsx(Delete, {\n        color: \"secondary\",\n        className: classes.commentDelete,\n        onClick: function onClick() {\n          return handleDeleteComment(postId, comment);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatTimeCreated\", function (time) {\n      return distanceInWordsToNow(time, {\n        includeSeconds: true,\n        addSuffix: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          auth = _this$props3.auth,\n          comments = _this$props3.comments,\n          classes = _this$props3.classes;\n      var text = this.state.text;\n      return __jsx(\"div\", {\n        className: classes.comments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, __jsx(CardHeader, {\n        avatar: __jsx(Avatar, {\n          className: classes.smallAvatar,\n          src: auth.user.avatar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        }),\n        title: __jsx(\"form\", {\n          onSubmit: this.handleSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }\n        }, __jsx(FormControl, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }\n        }, __jsx(InputLabel, {\n          htmlFor: \"add-comment\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        }, \"Add comments\"), __jsx(Input, {\n          id: \"add-comment\",\n          name: \"text\",\n          placeholder: \"Reply to this post\",\n          value: text,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }))),\n        className: classes.cardHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), comments.map(function (comment) {\n        return __jsx(CardHeader, {\n          key: comment._id,\n          avatar: __jsx(Avatar, {\n            className: classes.smallAvatar,\n            src: comment.postedBy.avatar,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }\n          }),\n          title: _this2.showComment(comment),\n          className: classes.cardHeader,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }\n        });\n      }));\n    }\n  }]);\n\n  return Comments;\n}(React.Component);\n\nvar styles = function styles(theme) {\n  return {\n    comments: {\n      backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n    },\n    cardHeader: {\n      paddingTop: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit\n    },\n    smallAvatar: {\n      margin: 10\n    },\n    commentDate: {\n      display: \"block\",\n      color: \"gray\",\n      fontSize: \"0.8em\"\n    },\n    commentDelete: {\n      fontSize: \"1.6em\",\n      verticalAlign: \"middle\",\n      cursor: \"pointer\"\n    }\n  };\n};\n\nexport default withStyles(styles)(Comments);","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Comments.js"],"names":["CardHeader","FormControl","InputLabel","Input","Avatar","Delete","withStyles","distanceInWordsToNow","Link","Comments","text","event","setState","target","value","state","props","postId","handleAddComment","preventDefault","comment","auth","classes","handleDeleteComment","isCommentCreator","postedBy","_id","user","name","commentDate","formatTimeCreated","createdAt","commentDelete","time","includeSeconds","addSuffix","comments","smallAvatar","avatar","handleSubmit","handleChange","cardHeader","map","showComment","React","Component","styles","theme","backgroundColor","paddingTop","spacing","unit","paddingBottom","margin","display","color","fontSize","verticalAlign","cursor"],"mappings":"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","sourcesContent":["import CardHeader from \"@material-ui/core/CardHeader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\n\nclass Comments extends React.Component {\n  state = {\n    text: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  handleSubmit = event => {\n    const { text } = this.state;\n    const { postId, handleAddComment } = this.props;\n\n    event.preventDefault();\n    handleAddComment(postId, text);\n    this.setState({ text: \"\" });\n  };\n\n  showComment = comment => {\n    const { postId, auth, classes, handleDeleteComment } = this.props;\n    const isCommentCreator = comment.postedBy._id === auth.user._id;\n\n    return (\n      <div>\n        <Link href={`/profile/${comment.postedBy._id}`}>\n          <a>{comment.postedBy.name}</a>\n        </Link>\n        <br />\n        {comment.text}\n        <span className={classes.commentDate}>\n          {this.formatTimeCreated(comment.createdAt)}\n          {isCommentCreator && (\n            <Delete\n              color=\"secondary\"\n              className={classes.commentDelete}\n              onClick={() => handleDeleteComment(postId, comment)}\n            />\n          )}\n        </span>\n      </div>\n    );\n  };\n\n  formatTimeCreated = time =>\n    distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    });\n\n  render() {\n    const { auth, comments, classes } = this.props;\n    const { text } = this.state;\n\n    return (\n      <div className={classes.comments}>\n        {/* Comment Input */}\n        <CardHeader\n          avatar={\n            <Avatar className={classes.smallAvatar} src={auth.user.avatar} />\n          }\n          title={\n            <form onSubmit={this.handleSubmit}>\n              <FormControl margin=\"normal\" required fullWidth>\n                <InputLabel htmlFor=\"add-comment\">Add comments</InputLabel>\n                <Input\n                  id=\"add-comment\"\n                  name=\"text\"\n                  placeholder=\"Reply to this post\"\n                  value={text}\n                  onChange={this.handleChange}\n                />\n              </FormControl>\n            </form>\n          }\n          className={classes.cardHeader}\n        />\n\n        {/* Comments */}\n        {comments.map(comment => (\n          <CardHeader\n            key={comment._id}\n            avatar={\n              <Avatar\n                className={classes.smallAvatar}\n                src={comment.postedBy.avatar}\n              />\n            }\n            title={this.showComment(comment)}\n            className={classes.cardHeader}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  comments: {\n    backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n  },\n  cardHeader: {\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit\n  },\n  smallAvatar: {\n    margin: 10\n  },\n  commentDate: {\n    display: \"block\",\n    color: \"gray\",\n    fontSize: \"0.8em\"\n  },\n  commentDelete: {\n    fontSize: \"1.6em\",\n    verticalAlign: \"middle\",\n    cursor: \"pointer\"\n  }\n});\n\nexport default withStyles(styles)(Comments);\n"]},"metadata":{},"sourceType":"module"}