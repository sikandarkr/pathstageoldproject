{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\nimport PostCard from '../Common/PostCard';\nimport CardHeader from '../Common/CardHeader';\nimport CardContent from '../Common/CardContent';\nimport CardFooter from '../Common/CardFooter';\nimport CardComment from '../Common/CardComment';\n\nvar Post = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Post, _React$PureComponent);\n\n  var _super = _createSuper(Post);\n\n  function Post() {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isLiked: false,\n      numLikes: 0,\n      comments: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkLiked\", function (likes) {\n      return likes.includes(_this.props.auth.user._id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatTimeCreated\", function (time) {\n      return distanceInWordsToNow(time, {\n        includeSeconds: true,\n        addSuffix: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        isLiked: this.checkLiked(this.props.post.likes),\n        numLikes: this.props.post.likes.length,\n        comments: this.props.post.comments\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.post.likes.length !== this.props.post.likes.length) {\n        this.setState({\n          isLiked: this.checkLiked(this.props.post.likes),\n          numLikes: this.props.post.likes.length\n        });\n      }\n\n      if (prevProps.post.comments.length !== this.props.post.comments.length) {\n        this.setState({\n          comments: this.props.post.comments\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          post = _this$props.post,\n          auth = _this$props.auth,\n          isDeletingPost = _this$props.isDeletingPost,\n          handleDeletePost = _this$props.handleDeletePost,\n          handleToggleLike = _this$props.handleToggleLike,\n          handleAddComment = _this$props.handleAddComment,\n          handleDeleteComment = _this$props.handleDeleteComment;\n      var _this$state = this.state,\n          isLiked = _this$state.isLiked,\n          numLikes = _this$state.numLikes,\n          comments = _this$state.comments;\n      var isPostCreator = post.postedBy._id === auth.user._id;\n      return __jsx(PostCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, __jsx(CardHeader, {\n        time: this.formatTimeCreated(post.createdAt),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }), __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }), __jsx(CardFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }), __jsx(CardComment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Post;\n}(React.PureComponent);\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      marginBottom: theme.spacing.unit * 3\n    },\n    cardContent: {\n      backgroundColor: \"white\"\n    },\n    cardHeader: {\n      paddingTop: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n    },\n    imageContainer: {\n      textAlign: \"center\",\n      padding: theme.spacing.unit\n    },\n    image: {\n      height: 200\n    },\n    favoriteIcon: {\n      color: theme.palette.favoriteIcon\n    },\n    commentIcon: {\n      color: theme.palette.commentIcon\n    }\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Post.js"],"names":["distanceInWordsToNow","Link","PostCard","CardHeader","CardContent","CardFooter","CardComment","Post","isLiked","numLikes","comments","likes","includes","props","auth","user","_id","time","includeSeconds","addSuffix","setState","checkLiked","post","length","prevProps","classes","isDeletingPost","handleDeletePost","handleToggleLike","handleAddComment","handleDeleteComment","state","isPostCreator","postedBy","formatTimeCreated","createdAt","React","PureComponent","styles","theme","card","marginBottom","spacing","unit","cardContent","backgroundColor","cardHeader","paddingTop","paddingBottom","imageContainer","textAlign","padding","image","height","favoriteIcon","color","palette","commentIcon"],"mappings":"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","sourcesContent":["import distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\nimport PostCard from '../Common/PostCard';\nimport CardHeader from '../Common/CardHeader';\nimport CardContent from '../Common/CardContent';\nimport CardFooter from '../Common/CardFooter';\nimport CardComment from '../Common/CardComment';\nclass Post extends React.PureComponent {\n  state = {\n    isLiked: false,\n    numLikes: 0,\n    comments: []\n  };\n\n  componentDidMount() {\n    this.setState({\n      isLiked: this.checkLiked(this.props.post.likes),\n      numLikes: this.props.post.likes.length,\n      comments: this.props.post.comments\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.post.likes.length !== this.props.post.likes.length) {\n      this.setState({\n        isLiked: this.checkLiked(this.props.post.likes),\n        numLikes: this.props.post.likes.length\n      });\n    }\n\n    if (prevProps.post.comments.length !== this.props.post.comments.length) {\n      this.setState({\n        comments: this.props.post.comments\n      });\n    }\n  }\n\n  checkLiked = likes => likes.includes(this.props.auth.user._id);\n\n  formatTimeCreated = time =>\n    distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    });\n\n  render() {\n    const {\n      classes,\n      post,\n      auth,\n      isDeletingPost,\n      handleDeletePost,\n      handleToggleLike,\n      handleAddComment,\n      handleDeleteComment\n    } = this.props;\n    const { isLiked, numLikes, comments } = this.state;\n    const isPostCreator = post.postedBy._id === auth.user._id;\n\n    return (\n          <PostCard>\n            <CardHeader\n            time={this.formatTimeCreated(post.createdAt)}\n            />\n            <CardContent/>\n            <CardFooter/>\n            <CardComment/>\n          </PostCard>\n      \n    );\n  }\n}\n\nconst styles = theme => ({\n  card: {\n    marginBottom: theme.spacing.unit * 3\n  },\n  cardContent: {\n    backgroundColor: \"white\"\n  },\n  cardHeader: {\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n  },\n  imageContainer: {\n    textAlign: \"center\",\n    padding: theme.spacing.unit\n  },\n  image: {\n    height: 200\n  },\n  favoriteIcon: {\n    color: theme.palette.favoriteIcon\n  },\n  commentIcon: {\n    color: theme.palette.commentIcon\n  }\n});\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}