{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\";\nimport SideMenuLeft from \"../Common/SideMenuLeft\";\nimport PreviewModel from \"../Common/PreviewModal\"; // import \"../../static/css/style.scss\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isModal: false\n    });\n\n    _defineProperty(this, \"showModal\", () => {\n      console.log(\"Modal activated\");\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchProfiles();\n  }\n\n  render() {\n    const {\n      users\n    } = this.props;\n    const {\n      isModal\n    } = this.state;\n    return __jsx(_Layout, null, __jsx(_Row, null, __jsx(_Col, {\n      span: 4,\n      md: 4,\n      xs: 24,\n      className: \"side-menu-left\"\n    }, __jsx(SideMenuLeft, {\n      showModal: this.showModal\n    })), __jsx(_Col, {\n      span: 12,\n      md: 12,\n      xs: 24\n    }, \"jhsajkahc\"), __jsx(_Col, {\n      span: 4,\n      md: 4,\n      xs: 24\n    }, \"Dashboard\")), __jsx(PreviewModel, null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.profiles\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProfiles: data => {\n      dispatch(fetchProfiles(data));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/backup/exampl/components/Layout/Dashboard.js"],"names":["React","Component","fetchProfiles","connect","SideMenuLeft","PreviewModel","Dashboard","isModal","console","log","componentDidMount","props","render","users","state","showModal","mapStateToProps","profiles","mapDispatchToProps","dispatch","data"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB,C,CACA;;AACA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACxB;AACNM,MAAAA,OAAO,EAAE;AADH,KADwB;;AAAA,uCAQpB,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAV+B;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWT,aAAX;AACD;;AAKDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAc,KAAKO,KAAzB;AACA,WACE,qBACE,kBACE;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,EAAE,EAAE,CAAlB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,SAAS,EAAC;AAAvC,OACE,MAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKC;AAA9B,MADF,CADF,EAIE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,EAAE,EAAE,EAAnB;AAAuB,MAAA,EAAE,EAAE;AAA3B,mBAJF,EAOE;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,EAAE,EAAE,CAAlB;AAAqB,MAAA,EAAE,EAAE;AAAzB,mBAPF,CADF,EAYE,MAAC,YAAD,OAZF,CADF;AAgBD;;AA/B+B;;AAiClC,MAAMC,eAAe,GAAIF,KAAD,IAAW;AACjC,SAAO;AACLD,IAAAA,KAAK,EAAEC,KAAK,CAACG;AADR,GAAP;AAGD,CAJD;;AAKA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLjB,IAAAA,aAAa,EAAGkB,IAAD,IAAU;AACvBD,MAAAA,QAAQ,CAACjB,aAAa,CAACkB,IAAD,CAAd,CAAR;AACD;AAHI,GAAP;AAKD;;AACD,eAAejB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb, Icon, Row, Col, Layout, Card, Carousel, Input, Button, Divider } from \"antd\";\nimport { fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\";\nimport SideMenuLeft from \"../Common/SideMenuLeft\";\nimport PreviewModel from \"../Common/PreviewModal\";\n// import \"../../static/css/style.scss\";\nclass Dashboard extends Component {\n  state = {\n    isModal: false,\n  };\n\n  componentDidMount() {\n    this.props.fetchProfiles();\n  }\n  showModal = () => {\n    console.log(\"Modal activated\");\n  };\n\n  render() {\n    const { users } = this.props;\n    const { isModal } = this.state;\n    return (\n      <Layout>\n        <Row>\n          <Col span={4} md={4} xs={24} className=\"side-menu-left\">\n            <SideMenuLeft showModal={this.showModal} />\n          </Col>\n          <Col span={12} md={12} xs={24}>\n            jhsajkahc\n          </Col>\n          <Col span={4} md={4} xs={24}>\n            Dashboard\n          </Col>\n        </Row>\n        <PreviewModel />\n      </Layout>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    users: state.profiles,\n  };\n};\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProfiles: (data) => {\n      dispatch(fetchProfiles(data));\n    },\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}