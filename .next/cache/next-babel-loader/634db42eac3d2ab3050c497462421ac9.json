{"ast":null,"code":"var _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Comments.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\n\nclass Comments extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      text: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        text: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      const {\n        text\n      } = this.state;\n      const {\n        postId,\n        handleAddComment\n      } = this.props;\n      event.preventDefault();\n      handleAddComment(postId, text);\n      this.setState({\n        text: \"\"\n      });\n    });\n\n    _defineProperty(this, \"showComment\", comment => {\n      const {\n        postId,\n        auth,\n        classes,\n        handleDeleteComment\n      } = this.props;\n      const isCommentCreator = comment.postedBy._id === auth.user._id;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, __jsx(Link, {\n        href: `/profile/${comment.postedBy._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, comment.postedBy.name)), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }), comment.text, __jsx(\"span\", {\n        className: classes.commentDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, this.formatTimeCreated(comment.createdAt), isCommentCreator && __jsx(Delete, {\n        color: \"secondary\",\n        className: classes.commentDelete,\n        onClick: () => handleDeleteComment(postId, comment),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })));\n    });\n\n    _defineProperty(this, \"formatTimeCreated\", time => distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    }));\n  }\n\n  render() {\n    const {\n      auth,\n      comments,\n      classes\n    } = this.props;\n    const {\n      text\n    } = this.state;\n    return __jsx(\"div\", {\n      className: classes.comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, __jsx(CardHeader, {\n      avatar: __jsx(Avatar, {\n        className: classes.smallAvatar,\n        src: auth.user.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }),\n      title: __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, __jsx(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, __jsx(InputLabel, {\n        htmlFor: \"add-comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, \"Add comments\"), __jsx(Input, {\n        id: \"add-comment\",\n        name: \"text\",\n        placeholder: \"Reply to this post\",\n        value: text,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }))),\n      className: classes.cardHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), comments.map(comment => __jsx(CardHeader, {\n      key: comment._id,\n      avatar: __jsx(Avatar, {\n        className: classes.smallAvatar,\n        src: comment.postedBy.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }),\n      title: this.showComment(comment),\n      className: classes.cardHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst styles = theme => ({\n  comments: {\n    backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n  },\n  cardHeader: {\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit\n  },\n  smallAvatar: {\n    margin: 10\n  },\n  commentDate: {\n    display: \"block\",\n    color: \"gray\",\n    fontSize: \"0.8em\"\n  },\n  commentDelete: {\n    fontSize: \"1.6em\",\n    verticalAlign: \"middle\",\n    cursor: \"pointer\"\n  }\n});\n\nexport default withStyles(styles)(Comments);","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Comments.js"],"names":["CardHeader","FormControl","InputLabel","Input","Avatar","Delete","withStyles","distanceInWordsToNow","Link","Comments","React","Component","text","event","setState","target","value","state","postId","handleAddComment","props","preventDefault","comment","auth","classes","handleDeleteComment","isCommentCreator","postedBy","_id","user","name","commentDate","formatTimeCreated","createdAt","commentDelete","time","includeSeconds","addSuffix","render","comments","smallAvatar","avatar","handleSubmit","handleChange","cardHeader","map","showComment","styles","theme","backgroundColor","paddingTop","spacing","unit","paddingBottom","margin","display","color","fontSize","verticalAlign","cursor"],"mappings":"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","sourcesContent":["import CardHeader from \"@material-ui/core/CardHeader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\n\nclass Comments extends React.Component {\n  state = {\n    text: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  handleSubmit = event => {\n    const { text } = this.state;\n    const { postId, handleAddComment } = this.props;\n\n    event.preventDefault();\n    handleAddComment(postId, text);\n    this.setState({ text: \"\" });\n  };\n\n  showComment = comment => {\n    const { postId, auth, classes, handleDeleteComment } = this.props;\n    const isCommentCreator = comment.postedBy._id === auth.user._id;\n\n    return (\n      <div>\n        <Link href={`/profile/${comment.postedBy._id}`}>\n          <a>{comment.postedBy.name}</a>\n        </Link>\n        <br />\n        {comment.text}\n        <span className={classes.commentDate}>\n          {this.formatTimeCreated(comment.createdAt)}\n          {isCommentCreator && (\n            <Delete\n              color=\"secondary\"\n              className={classes.commentDelete}\n              onClick={() => handleDeleteComment(postId, comment)}\n            />\n          )}\n        </span>\n      </div>\n    );\n  };\n\n  formatTimeCreated = time =>\n    distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    });\n\n  render() {\n    const { auth, comments, classes } = this.props;\n    const { text } = this.state;\n\n    return (\n      <div className={classes.comments}>\n        {/* Comment Input */}\n        <CardHeader\n          avatar={\n            <Avatar className={classes.smallAvatar} src={auth.user.avatar} />\n          }\n          title={\n            <form onSubmit={this.handleSubmit}>\n              <FormControl margin=\"normal\" required fullWidth>\n                <InputLabel htmlFor=\"add-comment\">Add comments</InputLabel>\n                <Input\n                  id=\"add-comment\"\n                  name=\"text\"\n                  placeholder=\"Reply to this post\"\n                  value={text}\n                  onChange={this.handleChange}\n                />\n              </FormControl>\n            </form>\n          }\n          className={classes.cardHeader}\n        />\n\n        {/* Comments */}\n        {comments.map(comment => (\n          <CardHeader\n            key={comment._id}\n            avatar={\n              <Avatar\n                className={classes.smallAvatar}\n                src={comment.postedBy.avatar}\n              />\n            }\n            title={this.showComment(comment)}\n            className={classes.cardHeader}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  comments: {\n    backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n  },\n  cardHeader: {\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit\n  },\n  smallAvatar: {\n    margin: 10\n  },\n  commentDate: {\n    display: \"block\",\n    color: \"gray\",\n    fontSize: \"0.8em\"\n  },\n  commentDelete: {\n    fontSize: \"1.6em\",\n    verticalAlign: \"middle\",\n    cursor: \"pointer\"\n  }\n});\n\nexport default withStyles(styles)(Comments);\n"]},"metadata":{},"sourceType":"module"}