{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\exampl\\\\components\\\\index\\\\Post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\nimport { LikeOutlined, CommentOutlined, ShareAltOutlined } from \"@ant-design/icons\";\nimport PostCard from '../Common/post/PostCard';\nimport CardHeader from '../Common/post/CardHeader';\nimport CardContent from '../Common/post/CardContent';\nimport CardFooter from '../Common/post/CardFooter';\nimport CardComment from '../Common/post/CardComment';\n\nclass Post extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isLiked: true,\n      numLikes: 0,\n      comments: []\n    });\n\n    _defineProperty(this, \"checkLiked\", likes => likes.includes(this.props.auth.user._id));\n\n    _defineProperty(this, \"formatTimeCreated\", time => distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    }));\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLiked: this.checkLiked(this.props.post.likes),\n      numLikes: this.props.post.likes.length,\n      comments: this.props.post.comments\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.post.likes.length !== this.props.post.likes.length) {\n      this.setState({\n        isLiked: this.checkLiked(this.props.post.likes),\n        numLikes: this.props.post.likes.length\n      });\n    }\n\n    if (prevProps.post.comments.length !== this.props.post.comments.length) {\n      this.setState({\n        comments: this.props.post.comments\n      });\n    }\n  }\n\n  render() {\n    const {\n      post,\n      auth,\n      isDeletingPost,\n      handleDeletePost,\n      handleToggleLike,\n      handleAddComment,\n      handleDeleteComment\n    } = this.props;\n    const {\n      isLiked,\n      numLikes,\n      comments\n    } = this.state;\n    const isPostCreator = post.postedBy._id === auth.user._id;\n    return __jsx(PostCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, __jsx(CardHeader, {\n      time: this.formatTimeCreated(post.createdAt),\n      name: post.postedBy.name,\n      id: post.postedBy._id,\n      avatar: post.postedBy.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }), __jsx(CardContent, {\n      text: post.text,\n      image: post.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, __jsx(LikeOutlined, {\n      className: isLiked ? `likeChecked` : `social`,\n      onClick: () => handleToggleLike(post),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }\n    }), \" \", __jsx(\"span\", {\n      className: \"social-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 118\n      }\n    }, numLikes, \" upvote\")), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, __jsx(CommentOutlined, {\n      className: \"social\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }\n    }), \" \", __jsx(\"span\", {\n      className: \"social-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 58\n      }\n    }, comments.length)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, __jsx(ShareAltOutlined, {\n      className: \"social\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }\n    }), \" \", __jsx(\"span\", {\n      className: \"social-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 59\n      }\n    }, \"122\"))), __jsx(CardComment, {\n      auth: auth,\n      postId: post._id,\n      comments: comments,\n      handleAddComment: handleAddComment // handleDeleteComment={handleDeleteComment}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["D:/workspace/exampl/components/index/Post.js"],"names":["distanceInWordsToNow","Link","LikeOutlined","CommentOutlined","ShareAltOutlined","PostCard","CardHeader","CardContent","CardFooter","CardComment","Post","React","PureComponent","isLiked","numLikes","comments","likes","includes","props","auth","user","_id","time","includeSeconds","addSuffix","componentDidMount","setState","checkLiked","post","length","componentDidUpdate","prevProps","render","isDeletingPost","handleDeletePost","handleToggleLike","handleAddComment","handleDeleteComment","state","isPostCreator","postedBy","formatTimeCreated","createdAt","name","avatar","text","image"],"mappings":";;;;;;AAAA,OAAOA,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,EAAsBC,eAAtB,EAAsCC,gBAAtC,QAA+D,mBAA/D;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,IAAN,SAAmBC,KAAK,CAACC,aAAzB,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,QAAQ,EAAE,CAFJ;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAD6B;;AAAA,wCA8BxBC,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAe,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,GAApC,CA9Be;;AAAA,+CAgCjBC,IAAI,IACtBtB,oBAAoB,CAACsB,IAAD,EAAO;AACzBC,MAAAA,cAAc,EAAE,IADS;AAEzBC,MAAAA,SAAS,EAAE;AAFc,KAAP,CAjCe;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AACZb,MAAAA,OAAO,EAAE,KAAKc,UAAL,CAAgB,KAAKT,KAAL,CAAWU,IAAX,CAAgBZ,KAAhC,CADG;AAEZF,MAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWU,IAAX,CAAgBZ,KAAhB,CAAsBa,MAFpB;AAGZd,MAAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWU,IAAX,CAAgBb;AAHd,KAAd;AAKD;;AAEDe,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACH,IAAV,CAAeZ,KAAf,CAAqBa,MAArB,KAAgC,KAAKX,KAAL,CAAWU,IAAX,CAAgBZ,KAAhB,CAAsBa,MAA1D,EAAkE;AAChE,WAAKH,QAAL,CAAc;AACZb,QAAAA,OAAO,EAAE,KAAKc,UAAL,CAAgB,KAAKT,KAAL,CAAWU,IAAX,CAAgBZ,KAAhC,CADG;AAEZF,QAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWU,IAAX,CAAgBZ,KAAhB,CAAsBa;AAFpB,OAAd;AAID;;AAED,QAAIE,SAAS,CAACH,IAAV,CAAeb,QAAf,CAAwBc,MAAxB,KAAmC,KAAKX,KAAL,CAAWU,IAAX,CAAgBb,QAAhB,CAAyBc,MAAhE,EAAwE;AACtE,WAAKH,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWU,IAAX,CAAgBb;AADd,OAAd;AAGD;AACF;;AAUDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJJ,MAAAA,IADI;AAEJT,MAAAA,IAFI;AAGJc,MAAAA,cAHI;AAIJC,MAAAA,gBAJI;AAKJC,MAAAA,gBALI;AAMJC,MAAAA,gBANI;AAOJC,MAAAA;AAPI,QAQF,KAAKnB,KART;AASA,UAAM;AAAEL,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA;AAArB,QAAkC,KAAKuB,KAA7C;AACA,UAAMC,aAAa,GAAGX,IAAI,CAACY,QAAL,CAAcnB,GAAd,KAAsBF,IAAI,CAACC,IAAL,CAAUC,GAAtD;AACA,WACM,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AACE,MAAA,IAAI,EAAE,KAAKoB,iBAAL,CAAuBb,IAAI,CAACc,SAA5B,CADR;AAEE,MAAA,IAAI,EAAEd,IAAI,CAACY,QAAL,CAAcG,IAFtB;AAGE,MAAA,EAAE,EAAEf,IAAI,CAACY,QAAL,CAAcnB,GAHpB;AAIE,MAAA,MAAM,EAAEO,IAAI,CAACY,QAAL,CAAcI,MAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,MAAC,WAAD;AACE,MAAA,IAAI,EAAEhB,IAAI,CAACiB,IADb;AAEE,MAAA,KAAK,EAAEjB,IAAI,CAACkB,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAWI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,MAAC,YAAD;AAAc,MAAA,SAAS,EAAEjC,OAAO,GAAE,aAAF,GAAgB,QAAhD;AAAyD,MAAA,OAAO,EAAE,MAAMsB,gBAAgB,CAACP,IAAD,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,OAAqG;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+Bd,QAA/B,YAArG,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,OAAyC;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BC,QAAQ,CAACc,MAAxC,CAAzC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,MAAC,gBAAD;AAAkB,MAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,OAA0C;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1C,CAHF,CAXJ,EAgBI,MAAC,WAAD;AACE,MAAA,IAAI,EAAEV,IADR;AAEE,MAAA,MAAM,EAAES,IAAI,CAACP,GAFf;AAGE,MAAA,QAAQ,EAAEN,QAHZ;AAIE,MAAA,gBAAgB,EAAEqB,gBAJpB,CAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,CADN;AA2BD;;AA7EoC;;AAkFvC,eAAe1B,IAAf","sourcesContent":["import distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\nimport { LikeOutlined,CommentOutlined,ShareAltOutlined  } from \"@ant-design/icons\";\nimport PostCard from '../Common/post/PostCard';\nimport CardHeader from '../Common/post/CardHeader';\nimport CardContent from '../Common/post/CardContent';\nimport CardFooter from '../Common/post/CardFooter';\nimport CardComment from '../Common/post/CardComment';\n\nclass Post extends React.PureComponent {\n  state = {\n    isLiked: true,\n    numLikes: 0,\n    comments: []\n  };\n\n  componentDidMount() {\n    this.setState({\n      isLiked: this.checkLiked(this.props.post.likes),\n      numLikes: this.props.post.likes.length,\n      comments: this.props.post.comments\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.post.likes.length !== this.props.post.likes.length) {\n      this.setState({\n        isLiked: this.checkLiked(this.props.post.likes),\n        numLikes: this.props.post.likes.length\n      });\n    }\n\n    if (prevProps.post.comments.length !== this.props.post.comments.length) {\n      this.setState({\n        comments: this.props.post.comments\n      });\n    }\n  }\n\n  checkLiked = likes => likes.includes(this.props.auth.user._id);\n\n  formatTimeCreated = time =>\n    distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    });\n\n  render() {\n    const {\n      post,\n      auth,\n      isDeletingPost,\n      handleDeletePost,\n      handleToggleLike,\n      handleAddComment,\n      handleDeleteComment,\n    } = this.props;\n    const { isLiked, numLikes, comments } = this.state;\n    const isPostCreator = post.postedBy._id === auth.user._id;\n    return (\n          <PostCard>\n              <CardHeader\n                time={this.formatTimeCreated(post.createdAt)}\n                name={post.postedBy.name}\n                id={post.postedBy._id}\n                avatar={post.postedBy.avatar}\n              />\n              <CardContent\n                text={post.text}\n                image={post.image}\n              />\n              <div className=\"card-footer\">   \n                <p><LikeOutlined className={isLiked?`likeChecked`:`social`} onClick={() => handleToggleLike(post)}/> <span className=\"social-text\">{numLikes} upvote</span></p>\n                <p><CommentOutlined className=\"social\"/> <span className=\"social-text\">{comments.length}</span></p>\n                <p><ShareAltOutlined className=\"social\"/> <span className=\"social-text\">122</span></p>\n              </div>\n              <CardComment\n                auth={auth}\n                postId={post._id}\n                comments={comments}\n                handleAddComment={handleAddComment}\n              // handleDeleteComment={handleDeleteComment}\n              />\n          </PostCard>\n      \n    );\n  }\n}\n\n\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}