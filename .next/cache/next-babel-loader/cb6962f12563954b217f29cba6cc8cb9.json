{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/CardComment.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { LikeOutlined, CommentOutlined, ShareAltOutlined } from \"@ant-design/icons\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Input from '../Common/Input';\nimport Link from \"next/link\";\n\nvar CardComment = /*#__PURE__*/function (_Component) {\n  _inherits(CardComment, _Component);\n\n  var _super = _createSuper(CardComment);\n\n  function CardComment() {\n    var _this;\n\n    _classCallCheck(this, CardComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      text: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (event) {\n      var text = _this.state.text;\n      var _this$props = _this.props,\n          postId = _this$props.postId,\n          handleAddComment = _this$props.handleAddComment;\n      event.preventDefault();\n      handleAddComment(postId, text);\n\n      _this.setState({\n        text: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showComment\", function (comment) {\n      var _this$props2 = _this.props,\n          postId = _this$props2.postId,\n          auth = _this$props2.auth,\n          classes = _this$props2.classes,\n          handleDeleteComment = _this$props2.handleDeleteComment;\n      var isCommentCreator = comment.postedBy._id === auth.user._id;\n      return __jsx(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, comment ? comment.map(function (comments) {\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"comment-list\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, __jsx(\"div\", {\n          className: \"comment-header-img\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }\n        }, __jsx(\"img\", {\n          src: comments.postedBy.avatar,\n          className: \"profile-header-post-pic\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        })), __jsx(\"div\", {\n          className: \"comment-list-container\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }\n        }, __jsx(\"span\", {\n          className: \"commentor-name\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }\n        }, __jsx(Link, {\n          href: \"/profile/\".concat(comments.postedBy._id),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }\n        }, __jsx(\"a\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }\n        }, comments.postedBy.name))), __jsx(\"span\", {\n          classsName: \"comment-time\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }, _this.formatTimeCreated(comment.createdAt)), __jsx(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }\n        }, comments.text))));\n      }) : null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatTimeCreated\", function (time) {\n      return distanceInWordsToNow(time, {\n        includeSeconds: true,\n        addSuffix: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CardComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          auth = _this$props3.auth,\n          comments = _this$props3.comments,\n          classes = _this$props3.classes;\n      return __jsx(\"div\", {\n        className: \"card-comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"comment-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"comment-header-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: \"/static/images/profile.jpeg\",\n        className: \"profile-header-post-pic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      })), __jsx(\"div\", {\n        className: \"comment-input-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, __jsx(Input, {\n        placeholder: \"Write Review *\",\n        name: \"comment\",\n        type: \"text\",\n        inputCss: \"post-comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      })))), __jsx(\"div\", {\n        className: \"comment-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, this.showComment(comments)));\n    }\n  }]);\n\n  return CardComment;\n}(Component);\n\nexport default CardComment;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/CardComment.js"],"names":["React","Component","LikeOutlined","CommentOutlined","ShareAltOutlined","distanceInWordsToNow","Input","Link","CardComment","text","event","setState","target","value","state","props","postId","handleAddComment","preventDefault","comment","auth","classes","handleDeleteComment","isCommentCreator","postedBy","_id","user","map","comments","avatar","name","formatTimeCreated","createdAt","time","includeSeconds","addSuffix","handleSubmit","showComment"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { Badge } from \"antd\";\nimport { LikeOutlined,CommentOutlined,ShareAltOutlined  } from \"@ant-design/icons\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Input from '../Common/Input';\nimport Link from \"next/link\";\nclass CardComment extends Component{\n    \n    state = {\n        text: \"\"\n      };\n\n    handleChange = event => {\n        this.setState({ text: event.target.value });\n    };\n\n\n    handleSubmit = event => {\n        const { text } = this.state;\n        const { postId, handleAddComment } = this.props;\n    \n        event.preventDefault();\n        handleAddComment(postId, text);\n        this.setState({ text: \"\" });\n      };\n    showComment=(comment)=>{\n        const { postId, auth, classes, handleDeleteComment } = this.props;\n        const isCommentCreator = comment.postedBy._id === auth.user._id;\n        return (\n            <div>\n                {comment?comment.map(comments=>{\n                    return <>\n                        <div className=\"comment-list\">\n                    <div className=\"comment-header-img\">\n                        <img src={comments.postedBy.avatar}  className=\"profile-header-post-pic\"/>\n                    </div>\n                    <div className=\"comment-list-container\">\n                        <span className=\"commentor-name\">\n                            <Link href={`/profile/${comments.postedBy._id}`}>\n                                <a>{comments.postedBy.name}</a>\n                            </Link>\n                        </span>\n                        <span classsName=\"comment-time\">{this.formatTimeCreated(comment.createdAt)}</span>\n                        <p>{comments.text}</p>\n                    </div>\n                    </div>\n                    </>\n                }):null}\n            </div>\n        )\n    }\n    formatTimeCreated = time =>\n        distanceInWordsToNow(time, {\n        includeSeconds: true,\n        addSuffix: true\n    });\n    render(){\n        const { auth, comments, classes } = this.props;\n      \n        return(\n            <div className=\"card-comment\">   \n                <div className=\"comment-input\">\n                    <div className=\"comment-header-img\">\n                        <img src=\"/static/images/profile.jpeg\"  className=\"profile-header-post-pic\"/>\n                    </div>\n                    <div className=\"comment-input-container\">\n                        <form onSubmit={this.handleSubmit}>\n                            <Input placeholder=\"Write Review *\" name=\"comment\" type=\"text\" inputCss=\"post-comment\"   />\n                        </form>\n                    </div>\n                </div>\n                <div className=\"comment-list\">\n                   {this.showComment(comments)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardComment;"]},"metadata":{},"sourceType":"module"}