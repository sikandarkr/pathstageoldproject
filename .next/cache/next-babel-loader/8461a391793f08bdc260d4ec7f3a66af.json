{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/PreviewModal.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\n// import { fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\";\nimport Input from \"./Input\";\nimport ReactCrop, { makeAspectCrop } from \"react-image-crop\"; // import \"react-image-crop/dist/ReactCrop.css\";\n\nvar PreviewModel = /*#__PURE__*/function (_Component) {\n  _inherits(PreviewModel, _Component);\n\n  var _super = _createSuper(PreviewModel);\n\n  function PreviewModel() {\n    var _this;\n\n    _classCallCheck(this, PreviewModel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      file: null,\n      src: null,\n      crop: {\n        x: 10,\n        y: 10,\n        width: 80,\n        height: 80\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      // if (e.target.files && e.target.files.length > 0) {\n      //   const reader = new FileReader();\n      //   reader.addEventListener(\n      //     \"load\",\n      //     () =>\n      //       this.setState({\n      //         src: reader.result,\n      //       }),\n      //     false\n      //   );\n      //   reader.readAsDataURL(e.target.files[0]);\n      // }\n      _this.setState({\n        file: URL.createObjectURL(event.target.files[0])\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onImageLoaded\", function (image) {\n      console.log(\"onCropComplete\", image);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCropComplete\", function (crop) {\n      console.log(\"onCropComplete\", crop);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCropChange\", function (crop) {\n      _this.setState({\n        crop: crop\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PreviewModel, [{\n    key: \"render\",\n    value: function render() {\n      var closeModal = this.props.closeModal;\n      return __jsx(_Layout, {\n        className: \"preview_modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, \"Adjust your profile picture\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"modal-close\",\n        onClick: closeModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, \"X\"))), __jsx(\"hr\", {\n        className: \"line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        className: \"modal-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, this.state.file ? \"\" : __jsx(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        className: \"profile-file-chooser\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 35\n        }\n      }), this.state.file ? __jsx(\"img\", {\n        src: this.state.file,\n        className: \"upload-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 30\n        }\n      }) : \"\"), __jsx(\"hr\", {\n        className: \"line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), __jsx(\"p\", {\n        className: \"upload-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, \"upload\"));\n    }\n  }]);\n\n  return PreviewModel;\n}(Component);\n\nexport default PreviewModel;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/PreviewModal.js"],"names":["React","Component","connect","Input","ReactCrop","makeAspectCrop","PreviewModel","file","src","crop","x","y","width","height","e","setState","URL","createObjectURL","event","target","files","image","console","log","closeModal","props","state","handleChange"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,IAAoBC,cAApB,QAA0C,kBAA1C,C,CACA;;IACMC,Y;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,GAAG,EAAE,IAFC;AAGNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,CAAC,EAAE,EADC;AAEJC,QAAAA,CAAC,EAAE,EAFC;AAGJC,QAAAA,KAAK,EAAE,EAHH;AAIJC,QAAAA,MAAM,EAAE;AAJJ;AAHA,K;;mEAUO,UAACC,CAAD,EAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAKC,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAES,GAAG,CAACC,eAAJ,CAAoBC,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB;AADM,OAAd;AAGD,K;;oEACe,UAACC,KAAD,EAAW;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACD,K;;qEAEgB,UAACZ,IAAD,EAAU;AACzBa,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bd,IAA9B;AACD,K;;mEAEc,UAACA,IAAD,EAAU;AACvB,YAAKM,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACD,K;;;;;;;6BACQ;AAAA,UACCe,UADD,GACgB,KAAKC,KADrB,CACCD,UADD;AAEP,aACE;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,OAAO,EAAEA,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAFF,CADF,EASE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,KAAL,CAAWnB,IAAX,GAAkB,EAAlB,GAAuB;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKoB,YAAlC;AAAgD,QAAA,SAAS,EAAC,sBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD1B,EAEG,KAAKD,KAAL,CAAWnB,IAAX,GAAkB;AAAK,QAAA,GAAG,EAAE,KAAKmB,KAAL,CAAWnB,IAArB;AAA2B,QAAA,SAAS,EAAC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,GAA2E,EAF9E,CAVF,EAcE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAgBE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,CADF;AAoBD;;;;EA7DwBN,S;;AAgE3B,eAAeK,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb, Icon, Row, Col, Layout, Card, Carousel, Button, Divider } from \"antd\";\n// import { fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\";\nimport Input from \"./Input\";\nimport ReactCrop, { makeAspectCrop } from \"react-image-crop\";\n// import \"react-image-crop/dist/ReactCrop.css\";\nclass PreviewModel extends Component {\n  state = {\n    file: null,\n    src: null,\n    crop: {\n      x: 10,\n      y: 10,\n      width: 80,\n      height: 80,\n    },\n  };\n  handleChange = (e) => {\n    // if (e.target.files && e.target.files.length > 0) {\n    //   const reader = new FileReader();\n    //   reader.addEventListener(\n    //     \"load\",\n    //     () =>\n    //       this.setState({\n    //         src: reader.result,\n    //       }),\n    //     false\n    //   );\n    //   reader.readAsDataURL(e.target.files[0]);\n    // }\n    this.setState({\n      file: URL.createObjectURL(event.target.files[0]),\n    });\n  };\n  onImageLoaded = (image) => {\n    console.log(\"onCropComplete\", image);\n  };\n\n  onCropComplete = (crop) => {\n    console.log(\"onCropComplete\", crop);\n  };\n\n  onCropChange = (crop) => {\n    this.setState({ crop });\n  };\n  render() {\n    const { closeModal } = this.props;\n    return (\n      <Layout className=\"preview_modal\">\n        <div className=\"header\">\n          <h3>Adjust your profile picture</h3>\n          <p>\n            <span className=\"modal-close\" onClick={closeModal}>\n              X\n            </span>\n          </p>\n        </div>\n        <hr className=\"line\"></hr>\n        <div className=\"modal-body\">\n          {this.state.file ? \"\" : <input type=\"file\" onChange={this.handleChange} className=\"profile-file-chooser\" />}\n          {this.state.file ? <img src={this.state.file} className=\"upload-image\" /> : \"\"}\n        </div>\n        <hr className=\"line\"></hr>\n\n        <p className=\"upload-btn\">upload</p>\n      </Layout>\n    );\n  }\n}\n\nexport default PreviewModel;\n"]},"metadata":{},"sourceType":"module"}