{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { fetchProfiles as _fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\";\nimport SideMenuLeft from \"../Common/SideMenuLeft\"; // import \"../../static/css/style.scss\";\n\nvar Dashboard = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      items: [{\n        qnty: 1,\n        item: \"apple\"\n      }, {\n        qnty: 1,\n        item: \"apple\"\n      }, {\n        qnty: 1,\n        item: \"apple\"\n      }, {\n        qnty: 1,\n        item: \"apple\"\n      }]\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"displayList\", function (data) {\n      var list = data.users && data.users.map(function (item, index) {\n        return __jsx(_Col, {\n          md: 12,\n          key: item._id\n        }, __jsx(\"div\", {\n          className: \"profile-card\"\n        }, __jsx(\"span\", null, \"X\"), __jsx(\"div\", {\n          className: \"card-img\"\n        }, __jsx(\"img\", {\n          src: item.profileUrl,\n          className: \"profile-img\"\n        })), __jsx(\"p\", {\n          className: \"name\"\n        }, item.name)));\n      });\n      return list;\n    });\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchProfiles();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var users = this.props.users;\n      console.log(\"your users....\", users);\n      return __jsx(_Layout, null, __jsx(_Row, null, __jsx(_Col, {\n        span: 4,\n        md: 4,\n        xs: 24,\n        className: \"sidenav\"\n      }, __jsx(_Row, null, __jsx(SideMenuLeft, null))), __jsx(_Col, {\n        span: 12,\n        md: 12,\n        xs: 24\n      }, this.state.items.map(function (i, j) {\n        return __jsx(\"div\", null, __jsx(_Col, null, __jsx(\"p\", null, i.item), __jsx(\"button\", null, \"Click\")));\n      })), __jsx(_Col, {\n        span: 4,\n        md: 4,\n        xs: 24\n      }, \"Dashboard\")));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.profiles\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProfiles: function fetchProfiles(data) {\n      dispatch(_fetchProfiles(data));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/backup/exampl/components/Layout/Dashboard.js"],"names":["React","Component","fetchProfiles","connect","SideMenuLeft","Dashboard","items","qnty","item","data","list","users","map","index","_id","profileUrl","name","props","console","log","state","i","j","mapStateToProps","profiles","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,aAAa,IAAbA,cAAT,QAA8B,qCAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB,C,CACA;;IACMC,S;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE,CACL;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OADK,EAEL;AAAED,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAFK,EAGL;AAAED,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAHK,EAIL;AAAED,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAJK;AADD,K;;kEAYM,UAAAC,IAAI,EAAI;AACpB,UAAMC,IAAI,GACRD,IAAI,CAACE,KAAL,IACAF,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,UAACJ,IAAD,EAAOK,KAAP;AAAA,eACb;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,GAAG,EAAEL,IAAI,CAACM;AAAvB,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE,wBADF,EAEE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,GAAG,EAAEN,IAAI,CAACO,UAAf;AAA2B,UAAA,SAAS,EAAC;AAArC,UADF,CAFF,EAKE;AAAG,UAAA,SAAS,EAAC;AAAb,WAAqBP,IAAI,CAACQ,IAA1B,CALF,CADF,CADa;AAAA,OAAf,CAFF;AAaA,aAAON,IAAP;AACD,K;;;;;;;wCAlBmB;AAClB,WAAKO,KAAL,CAAWf,aAAX;AACD;;;6BAiBQ;AAAA,UACCS,KADD,GACW,KAAKM,KADhB,CACCN,KADD;AAEPO,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,KAA9B;AACA,aACE,qBACE,kBACE;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,EAAE,EAAE,CAAlB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,SAAS,EAAC;AAAvC,SACE,kBACE,MAAC,YAAD,OADF,CADF,CADF,EAME;AAAK,QAAA,IAAI,EAAE,EAAX;AAAe,QAAA,EAAE,EAAE,EAAnB;AAAuB,QAAA,EAAE,EAAE;AAA3B,SAEG,KAAKS,KAAL,CAAWd,KAAX,CAAiBM,GAAjB,CAAqB,UAACS,CAAD,EAAIC,CAAJ,EAAU;AAC9B,eACE,mBACE,kBACE,iBAAID,CAAC,CAACb,IAAN,CADF,EAEE,8BAFF,CADF,CADF;AAQD,OATA,CAFH,CANF,EAmBE;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,EAAE,EAAE,CAAlB;AAAqB,QAAA,EAAE,EAAE;AAAzB,qBAnBF,CADF,CADF;AA2BD;;;;EA3DqBP,S;;AA6DxB,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,KAAK,EAAI;AAC/B,SAAO;AACLT,IAAAA,KAAK,EAAES,KAAK,CAACI;AADR,GAAP;AAGD,CAJD;;AAKA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLxB,IAAAA,aAAa,EAAE,uBAAAO,IAAI,EAAI;AACrBiB,MAAAA,QAAQ,CAACxB,cAAa,CAACO,IAAD,CAAd,CAAR;AACD;AAHI,GAAP;AAKD;;AACD,eAAeN,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb, Icon, Row, Col, Layout, Card, Carousel, Input, Button, Divider } from \"antd\";\nimport { fetchProfiles } from \"../../redux/actions/dashboardAction\";\nimport { connect } from \"react-redux\";\nimport SideMenuLeft from \"../Common/SideMenuLeft\";\n// import \"../../static/css/style.scss\";\nclass Dashboard extends Component {\n  state = {\n    items: [\n      { qnty: 1, item: \"apple\" },\n      { qnty: 1, item: \"apple\" },\n      { qnty: 1, item: \"apple\" },\n      { qnty: 1, item: \"apple\" }\n    ]\n  };\n\n  componentDidMount() {\n    this.props.fetchProfiles();\n  }\n  displayList = data => {\n    const list =\n      data.users &&\n      data.users.map((item, index) => (\n        <Col md={12} key={item._id}>\n          <div className=\"profile-card\">\n            <span>X</span>\n            <div className=\"card-img\">\n              <img src={item.profileUrl} className=\"profile-img\" />\n            </div>\n            <p className=\"name\">{item.name}</p>\n          </div>\n        </Col>\n      ));\n    return list;\n  };\n  render() {\n    const { users } = this.props;\n    console.log(\"your users....\", users);\n    return (\n      <Layout>\n        <Row>\n          <Col span={4} md={4} xs={24} className=\"sidenav\">\n            <Row>\n              <SideMenuLeft />\n            </Row>\n          </Col>\n          <Col span={12} md={12} xs={24}>\n            {/* <Row>{this.props.users && this.displayList(users)}</Row> */}\n            {this.state.items.map((i, j) => {\n              return (\n                <div>\n                  <Col>\n                    <p>{i.item}</p>\n                    <button>Click</button>\n                  </Col>\n                </div>\n              );\n            })}\n          </Col>\n          <Col span={4} md={4} xs={24}>\n            Dashboard\n          </Col>\n        </Row>\n      </Layout>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    users: state.profiles\n  };\n};\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProfiles: data => {\n      dispatch(fetchProfiles(data));\n    }\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}