{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport initialData from \"./initial-data\";\nimport { DragDropContext } from \"react-beautiful-dnd\"; // import \"@atlaskit/css-reset\";\n\nimport Column from \"./column\";\n\nvar Dragable = /*#__PURE__*/function (_Component) {\n  _inherits(Dragable, _Component);\n\n  function Dragable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dragable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dragable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", initialData);\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragEnd\", function (result) {\n      console.log(\"result \", result);\n      document.body.style.color = \"inherit\";\n      var destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.draggableId === source.draggableId && destination.index === source.index) {\n        return;\n      } // const column = this.state.columns[source.droppableId];\n      // const newTaskIds = Array.from(column.taskIds);\n      // newTaskIds.splice(source.index, 1);\n      // newTaskIds.splice(destination.index, 0, draggableId);\n      // const newColumn = {\n      //   ...column,\n      //   taskIds: newTaskIds\n      // };\n      // const newState = {\n      //   ...this.state,\n      //   columns: {\n      //     ...this.state.columns,\n      //     [newColumn.id]: newColumn\n      //   }\n      // };\n      // this.setState(newState);\n\n    });\n\n    return _this;\n  }\n\n  _createClass(Dragable, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        onDragStart: this.onDragStart,\n        onDragUpdate: this.onDragUpdate\n      }, __jsx(Column, {\n        key: \"column.id\",\n        tasks: this.state.tasks\n      }));\n    } // render() {\n    //   return (\n    //     <DragDropContext onDragEnd={this.onDragEnd} onDragStart={this.onDragStart} onDragUpdate={this.onDragUpdate}>\n    //       {this.state.columnOrder.map(columnId => {\n    //         const column = this.state.columns[columnId];\n    //         console.log(\"columnId ::: \", column);\n    //         const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n    //         console.log(\"task jdkfj \", tasks);\n    //         return <Column key={column.id} column={column} tasks={tasks} />;\n    //       })}\n    //     </DragDropContext>\n    //   );\n    // }\n\n  }]);\n\n  return Dragable;\n}(Component);\n\nexport default Dragable;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/exampl/components/DragableExample/Dragable.js"],"names":["React","Component","initialData","DragDropContext","Column","Dragable","result","console","log","document","body","style","color","destination","source","draggableId","index","onDragEnd","onDragStart","onDragUpdate","state","tasks"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IACMC,Q;;;;;;;;;;;;;;;;4DACIH,W;;gEAQI,UAAAI,MAAM,EAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,KAApB,GAA4B,SAA5B;AAFoB,UAGZC,WAHY,GAGyBP,MAHzB,CAGZO,WAHY;AAAA,UAGCC,MAHD,GAGyBR,MAHzB,CAGCQ,MAHD;AAAA,UAGSC,WAHT,GAGyBT,MAHzB,CAGSS,WAHT;;AAIpB,UAAI,CAACF,WAAL,EAAkB;AAChB;AACD;;AACD,UAAIA,WAAW,CAACE,WAAZ,KAA4BD,MAAM,CAACC,WAAnC,IAAkDF,WAAW,CAACG,KAAZ,KAAsBF,MAAM,CAACE,KAAnF,EAA0F;AACxF;AACD,OATmB,CAUpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACD,K;;;;;;;6BACQ;AACP,aACE,MAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,KAAKC,SAAjC;AAA4C,QAAA,WAAW,EAAE,KAAKC,WAA9D;AAA2E,QAAA,YAAY,EAAE,KAAKC;AAA9F,SACE,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,WAAb;AAA0B,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC;AAA5C,QADF,CADF;AASD,K,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EA5DqBpB,S;;AA8DvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport initialData from \"./initial-data\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n// import \"@atlaskit/css-reset\";\nimport Column from \"./column\";\nclass Dragable extends Component {\n  state = initialData;\n  // onDragStart = () => {\n  //   document.body.style.color = \"orange\";\n  // };\n  // onDragUpdate = update => {\n  //   const { destination } = update;\n  //   const opacity = destination ? destination.index / Object.keys(this.state.tasks).length : 0;\n  // };\n  onDragEnd = result => {\n    console.log(\"result \", result);\n    document.body.style.color = \"inherit\";\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.draggableId === source.draggableId && destination.index === source.index) {\n      return;\n    }\n    // const column = this.state.columns[source.droppableId];\n    // const newTaskIds = Array.from(column.taskIds);\n    // newTaskIds.splice(source.index, 1);\n    // newTaskIds.splice(destination.index, 0, draggableId);\n    // const newColumn = {\n    //   ...column,\n    //   taskIds: newTaskIds\n    // };\n    // const newState = {\n    //   ...this.state,\n    //   columns: {\n    //     ...this.state.columns,\n    //     [newColumn.id]: newColumn\n    //   }\n    // };\n\n    // this.setState(newState);\n  };\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd} onDragStart={this.onDragStart} onDragUpdate={this.onDragUpdate}>\n        <Column key={\"column.id\"} tasks={this.state.tasks} />\n        {/* {this.state.tasks.map((column, index) => {\n          \n          return <Column key={column.id} column={column} tasks={this.state.tasks} index={index} />;\n        })} */}\n      </DragDropContext>\n    );\n  }\n  // render() {\n  //   return (\n  //     <DragDropContext onDragEnd={this.onDragEnd} onDragStart={this.onDragStart} onDragUpdate={this.onDragUpdate}>\n  //       {this.state.columnOrder.map(columnId => {\n  //         const column = this.state.columns[columnId];\n  //         console.log(\"columnId ::: \", column);\n  //         const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n  //         console.log(\"task jdkfj \", tasks);\n  //         return <Column key={column.id} column={column} tasks={tasks} />;\n  //       })}\n  //     </DragDropContext>\n  //   );\n  // }\n}\nexport default Dragable;\n"]},"metadata":{},"sourceType":"module"}