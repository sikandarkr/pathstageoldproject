{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport initialData from \"./initial-data\";\nimport { DragDropContext } from \"react-beautiful-dnd\"; // import \"@atlaskit/css-reset\";\n\nimport Column from \"./column\";\n\nvar Dragable = /*#__PURE__*/function (_Component) {\n  _inherits(Dragable, _Component);\n\n  function Dragable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dragable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dragable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", initialData);\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragEnd\", function (result) {\n      var destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.draggableId === source.draggableId && destination.index === source.index) {\n        return;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Dragable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(DragDropContext, {\n        onDragEnd: this.onDragEnd\n      }, this.state.columnOrder.map(function (columnId) {\n        var column = _this2.state.columns[columnId];\n        var tasks = column.taskIds.map(function (taskId) {\n          return _this2.state.tasks[taskId];\n        });\n        return __jsx(Column, {\n          key: column.id,\n          column: column,\n          tasks: tasks\n        });\n      }));\n    }\n  }]);\n\n  return Dragable;\n}(Component);\n\nexport default Dragable;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/exampl/components/DragableExample/Dragable.js"],"names":["React","Component","initialData","DragDropContext","Column","Dragable","result","destination","source","draggableId","index","onDragEnd","state","columnOrder","map","columnId","column","columns","tasks","taskIds","taskId","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IACMC,Q;;;;;;;;;;;;;;;;4DACIH,W;;gEACI,UAAAI,MAAM,EAAI;AAAA,UACZC,WADY,GACyBD,MADzB,CACZC,WADY;AAAA,UACCC,MADD,GACyBF,MADzB,CACCE,MADD;AAAA,UACSC,WADT,GACyBH,MADzB,CACSG,WADT;;AAEpB,UAAI,CAACF,WAAL,EAAkB;AAChB;AACD;;AACD,UAAIA,WAAW,CAACE,WAAZ,KAA4BD,MAAM,CAACC,WAAnC,IAAkDF,WAAW,CAACG,KAAZ,KAAsBF,MAAM,CAACE,KAAnF,EAA0F;AACxF;AACD;AACF,K;;;;;;;6BACQ;AAAA;;AACP,aACE,MAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,KAAKC;AAAjC,SACG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2B,UAAAC,QAAQ,EAAI;AACtC,YAAMC,MAAM,GAAG,MAAI,CAACJ,KAAL,CAAWK,OAAX,CAAmBF,QAAnB,CAAf;AACA,YAAMG,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeL,GAAf,CAAmB,UAAAM,MAAM;AAAA,iBAAI,MAAI,CAACR,KAAL,CAAWM,KAAX,CAAiBE,MAAjB,CAAJ;AAAA,SAAzB,CAAd;AACA,eAAO,MAAC,MAAD;AAAQ,UAAA,GAAG,EAAEJ,MAAM,CAACK,EAApB;AAAwB,UAAA,MAAM,EAAEL,MAAhC;AAAwC,UAAA,KAAK,EAAEE;AAA/C,UAAP;AACD,OAJA,CADH,CADF;AASD;;;;EArBoBjB,S;;AAuBvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport initialData from \"./initial-data\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n// import \"@atlaskit/css-reset\";\nimport Column from \"./column\";\nclass Dragable extends Component {\n  state = initialData;\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.draggableId === source.draggableId && destination.index === source.index) {\n      return;\n    }\n  };\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        {this.state.columnOrder.map(columnId => {\n          const column = this.state.columns[columnId];\n          const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n          return <Column key={column.id} column={column} tasks={tasks} />;\n        })}\n      </DragDropContext>\n    );\n  }\n}\nexport default Dragable;\n"]},"metadata":{},"sourceType":"module"}