{"ast":null,"code":"var _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\nimport PostCard from '../Common/PostCard';\nimport CardHeader from '../Common/CardHeader';\nimport CardContent from '../Common/CardContent';\nimport CardFooter from '../Common/CardFooter';\nimport CardComment from '../Common/CardComment';\n\nclass Post extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isLiked: false,\n      numLikes: 0,\n      comments: []\n    });\n\n    _defineProperty(this, \"checkLiked\", likes => likes.includes(this.props.auth.user._id));\n\n    _defineProperty(this, \"formatTimeCreated\", time => distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    }));\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLiked: this.checkLiked(this.props.post.likes),\n      numLikes: this.props.post.likes.length,\n      comments: this.props.post.comments\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.post.likes.length !== this.props.post.likes.length) {\n      this.setState({\n        isLiked: this.checkLiked(this.props.post.likes),\n        numLikes: this.props.post.likes.length\n      });\n    }\n\n    if (prevProps.post.comments.length !== this.props.post.comments.length) {\n      this.setState({\n        comments: this.props.post.comments\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      post,\n      auth,\n      isDeletingPost,\n      handleDeletePost,\n      handleToggleLike,\n      handleAddComment,\n      handleDeleteComment\n    } = this.props;\n    const {\n      isLiked,\n      numLikes,\n      comments\n    } = this.state;\n    const isPostCreator = post.postedBy._id === auth.user._id;\n    return __jsx(PostCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, __jsx(CardHeader, {\n      time: this.formatTimeCreated(post.createdAt),\n      name: post.postedBy.name,\n      id: post.postedBy._id,\n      avatar: post.postedBy.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), __jsx(CardContent, {\n      text: post.text,\n      image: post.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), __jsx(CardFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), __jsx(CardComment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst styles = theme => ({\n  card: {\n    marginBottom: theme.spacing.unit * 3\n  },\n  cardContent: {\n    backgroundColor: \"white\"\n  },\n  cardHeader: {\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n  },\n  imageContainer: {\n    textAlign: \"center\",\n    padding: theme.spacing.unit\n  },\n  image: {\n    height: 200\n  },\n  favoriteIcon: {\n    color: theme.palette.favoriteIcon\n  },\n  commentIcon: {\n    color: theme.palette.commentIcon\n  }\n});\n\nexport default Post;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Post.js"],"names":["distanceInWordsToNow","Link","PostCard","CardHeader","CardContent","CardFooter","CardComment","Post","React","PureComponent","isLiked","numLikes","comments","likes","includes","props","auth","user","_id","time","includeSeconds","addSuffix","componentDidMount","setState","checkLiked","post","length","componentDidUpdate","prevProps","render","classes","isDeletingPost","handleDeletePost","handleToggleLike","handleAddComment","handleDeleteComment","state","isPostCreator","postedBy","formatTimeCreated","createdAt","name","avatar","text","image","styles","theme","card","marginBottom","spacing","unit","cardContent","backgroundColor","cardHeader","paddingTop","paddingBottom","imageContainer","textAlign","padding","height","favoriteIcon","color","palette","commentIcon"],"mappings":"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","sourcesContent":["import distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\nimport PostCard from '../Common/PostCard';\nimport CardHeader from '../Common/CardHeader';\nimport CardContent from '../Common/CardContent';\nimport CardFooter from '../Common/CardFooter';\nimport CardComment from '../Common/CardComment';\nclass Post extends React.PureComponent {\n  state = {\n    isLiked: false,\n    numLikes: 0,\n    comments: []\n  };\n\n  componentDidMount() {\n    this.setState({\n      isLiked: this.checkLiked(this.props.post.likes),\n      numLikes: this.props.post.likes.length,\n      comments: this.props.post.comments\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.post.likes.length !== this.props.post.likes.length) {\n      this.setState({\n        isLiked: this.checkLiked(this.props.post.likes),\n        numLikes: this.props.post.likes.length\n      });\n    }\n\n    if (prevProps.post.comments.length !== this.props.post.comments.length) {\n      this.setState({\n        comments: this.props.post.comments\n      });\n    }\n  }\n\n  checkLiked = likes => likes.includes(this.props.auth.user._id);\n\n  formatTimeCreated = time =>\n    distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    });\n\n  render() {\n    const {\n      classes,\n      post,\n      auth,\n      isDeletingPost,\n      handleDeletePost,\n      handleToggleLike,\n      handleAddComment,\n      handleDeleteComment\n    } = this.props;\n    const { isLiked, numLikes, comments } = this.state;\n    const isPostCreator = post.postedBy._id === auth.user._id;\n    return (\n          <PostCard>\n            <CardHeader\n              time={this.formatTimeCreated(post.createdAt)}\n              name={post.postedBy.name}\n              id={post.postedBy._id}\n              avatar={post.postedBy.avatar}\n            />\n            <CardContent\n                text={post.text}\n                image={post.image}\n            />\n            <CardFooter/>\n            <CardComment/>\n          </PostCard>\n      \n    );\n  }\n}\n\nconst styles = theme => ({\n  card: {\n    marginBottom: theme.spacing.unit * 3\n  },\n  cardContent: {\n    backgroundColor: \"white\"\n  },\n  cardHeader: {\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n  },\n  imageContainer: {\n    textAlign: \"center\",\n    padding: theme.spacing.unit\n  },\n  image: {\n    height: 200\n  },\n  favoriteIcon: {\n    color: theme.palette.favoriteIcon\n  },\n  commentIcon: {\n    color: theme.palette.commentIcon\n  }\n});\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}