{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Badge from \"@material-ui/core/Badge\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Comment from \"@material-ui/icons/Comment\";\nimport DeleteTwoTone from \"@material-ui/icons/DeleteTwoTone\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\nimport Comments from \"./Comments\";\n\nvar Post = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Post, _React$PureComponent);\n\n  var _super = _createSuper(Post);\n\n  function Post() {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isLiked: false,\n      numLikes: 0,\n      comments: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkLiked\", function (likes) {\n      return likes.includes(_this.props.auth.user._id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatTimeCreated\", function (time) {\n      return distanceInWordsToNow(time, {\n        includeSeconds: true,\n        addSuffix: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        isLiked: this.checkLiked(this.props.post.likes),\n        numLikes: this.props.post.likes.length,\n        comments: this.props.post.comments\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.post.likes.length !== this.props.post.likes.length) {\n        this.setState({\n          isLiked: this.checkLiked(this.props.post.likes),\n          numLikes: this.props.post.likes.length\n        });\n      }\n\n      if (prevProps.post.comments.length !== this.props.post.comments.length) {\n        this.setState({\n          comments: this.props.post.comments\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          post = _this$props.post,\n          auth = _this$props.auth,\n          isDeletingPost = _this$props.isDeletingPost,\n          handleDeletePost = _this$props.handleDeletePost,\n          handleToggleLike = _this$props.handleToggleLike,\n          handleAddComment = _this$props.handleAddComment,\n          handleDeleteComment = _this$props.handleDeleteComment;\n      var _this$state = this.state,\n          isLiked = _this$state.isLiked,\n          numLikes = _this$state.numLikes,\n          comments = _this$state.comments;\n      var isPostCreator = post.postedBy._id === auth.user._id;\n      return __jsx(Card, {\n        className: classes.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, __jsx(CardHeader, {\n        avatar: __jsx(Avatar, {\n          src: post.postedBy.avatar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }\n        }),\n        action: isPostCreator && __jsx(IconButton, {\n          disabled: isDeletingPost,\n          onClick: function onClick() {\n            return handleDeletePost(post);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }\n        }, __jsx(DeleteTwoTone, {\n          color: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }\n        })),\n        title: __jsx(Link, {\n          href: \"/profile/\".concat(post.postedBy._id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }\n        }, post.postedBy.name)),\n        subheader: this.formatTimeCreated(post.createdAt),\n        className: classes.cardHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }), __jsx(CardContent, {\n        className: classes.cardContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, __jsx(Typography, {\n        variant: \"body1\",\n        className: classes.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, post.text), post.image && __jsx(\"div\", {\n        className: classes.imageContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        className: classes.image,\n        src: post.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }))), __jsx(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          return handleToggleLike(post);\n        },\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, __jsx(Badge, {\n        badgeContent: numLikes,\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, isLiked ? __jsx(Favorite, {\n        className: classes.favoriteIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }) : __jsx(FavoriteBorder, {\n        className: classes.favoriteIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }))), __jsx(IconButton, {\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, __jsx(Badge, {\n        badgeContent: comments.length,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, __jsx(Comment, {\n        className: classes.commentIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      })))), __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }), __jsx(Comments, {\n        auth: auth,\n        postId: post._id,\n        comments: comments,\n        handleAddComment: handleAddComment,\n        handleDeleteComment: handleDeleteComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Post;\n}(React.PureComponent);\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      marginBottom: theme.spacing.unit * 3\n    },\n    cardContent: {\n      backgroundColor: \"white\"\n    },\n    cardHeader: {\n      paddingTop: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n    },\n    imageContainer: {\n      textAlign: \"center\",\n      padding: theme.spacing.unit\n    },\n    image: {\n      height: 200\n    },\n    favoriteIcon: {\n      color: theme.palette.favoriteIcon\n    },\n    commentIcon: {\n      color: theme.palette.commentIcon\n    }\n  };\n};\n\nexport default withStyles(styles)(Post);","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/index/Post.js"],"names":["Badge","Card","CardHeader","CardContent","CardActions","Typography","IconButton","Divider","Avatar","Comment","DeleteTwoTone","Favorite","FavoriteBorder","withStyles","distanceInWordsToNow","Link","Comments","Post","isLiked","numLikes","comments","likes","includes","props","auth","user","_id","time","includeSeconds","addSuffix","setState","checkLiked","post","length","prevProps","classes","isDeletingPost","handleDeletePost","handleToggleLike","handleAddComment","handleDeleteComment","state","isPostCreator","postedBy","card","avatar","name","formatTimeCreated","createdAt","cardHeader","cardContent","text","image","imageContainer","button","favoriteIcon","commentIcon","React","PureComponent","styles","theme","marginBottom","spacing","unit","backgroundColor","paddingTop","paddingBottom","textAlign","padding","height","color","palette"],"mappings":"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","sourcesContent":["import Badge from \"@material-ui/core/Badge\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Comment from \"@material-ui/icons/Comment\";\nimport DeleteTwoTone from \"@material-ui/icons/DeleteTwoTone\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Link from \"next/link\";\n\nimport Comments from \"./Comments\";\n\nclass Post extends React.PureComponent {\n  state = {\n    isLiked: false,\n    numLikes: 0,\n    comments: []\n  };\n\n  componentDidMount() {\n    this.setState({\n      isLiked: this.checkLiked(this.props.post.likes),\n      numLikes: this.props.post.likes.length,\n      comments: this.props.post.comments\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.post.likes.length !== this.props.post.likes.length) {\n      this.setState({\n        isLiked: this.checkLiked(this.props.post.likes),\n        numLikes: this.props.post.likes.length\n      });\n    }\n\n    if (prevProps.post.comments.length !== this.props.post.comments.length) {\n      this.setState({\n        comments: this.props.post.comments\n      });\n    }\n  }\n\n  checkLiked = likes => likes.includes(this.props.auth.user._id);\n\n  formatTimeCreated = time =>\n    distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    });\n\n  render() {\n    const {\n      classes,\n      post,\n      auth,\n      isDeletingPost,\n      handleDeletePost,\n      handleToggleLike,\n      handleAddComment,\n      handleDeleteComment\n    } = this.props;\n    const { isLiked, numLikes, comments } = this.state;\n    const isPostCreator = post.postedBy._id === auth.user._id;\n\n    return (\n      <Card className={classes.card}>\n        {/* Post Header */}\n        <CardHeader\n          avatar={<Avatar src={post.postedBy.avatar} />}\n          action={\n            isPostCreator && (\n              <IconButton\n                disabled={isDeletingPost}\n                onClick={() => handleDeletePost(post)}\n              >\n                <DeleteTwoTone color=\"secondary\" />\n              </IconButton>\n            )\n          }\n          title={\n            <Link href={`/profile/${post.postedBy._id}`}>\n              <a>{post.postedBy.name}</a>\n            </Link>\n          }\n          subheader={this.formatTimeCreated(post.createdAt)}\n          className={classes.cardHeader}\n        />\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"body1\" className={classes.text}>\n            {post.text}\n          </Typography>\n          {/* Post Image */}\n          {post.image && (\n            <div className={classes.imageContainer}>\n              <img className={classes.image} src={post.image} />\n            </div>\n          )}\n        </CardContent>\n\n        {/* Post Actions */}\n        <CardActions>\n          <IconButton\n            onClick={() => handleToggleLike(post)}\n            className={classes.button}\n          >\n            <Badge badgeContent={numLikes} color=\"secondary\">\n              {isLiked ? (\n                <Favorite className={classes.favoriteIcon} />\n              ) : (\n                <FavoriteBorder className={classes.favoriteIcon} />\n              )}\n            </Badge>\n          </IconButton>\n          <IconButton className={classes.button}>\n            <Badge badgeContent={comments.length} color=\"primary\">\n              <Comment className={classes.commentIcon} />\n            </Badge>\n          </IconButton>\n        </CardActions>\n        <Divider />\n\n        {/* Comments Area */}\n        <Comments\n          auth={auth}\n          postId={post._id}\n          comments={comments}\n          handleAddComment={handleAddComment}\n          handleDeleteComment={handleDeleteComment}\n        />\n      </Card>\n    );\n  }\n}\n\nconst styles = theme => ({\n  card: {\n    marginBottom: theme.spacing.unit * 3\n  },\n  cardContent: {\n    backgroundColor: \"white\"\n  },\n  cardHeader: {\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    backgroundColor: \"rgba(11, 61, 130, 0.06)\"\n  },\n  imageContainer: {\n    textAlign: \"center\",\n    padding: theme.spacing.unit\n  },\n  image: {\n    height: 200\n  },\n  favoriteIcon: {\n    color: theme.palette.favoriteIcon\n  },\n  commentIcon: {\n    color: theme.palette.commentIcon\n  }\n});\n\nexport default withStyles(styles)(Post);\n"]},"metadata":{},"sourceType":"module"}