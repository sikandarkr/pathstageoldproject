{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/CardComment.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { LikeOutlined, CommentOutlined, ShareAltOutlined } from \"@ant-design/icons\";\nimport Input from '../Common/Input';\n\nvar CardComment = /*#__PURE__*/function (_Component) {\n  _inherits(CardComment, _Component);\n\n  var _super = _createSuper(CardComment);\n\n  function CardComment() {\n    var _this;\n\n    _classCallCheck(this, CardComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"showComment\", function (comment) {\n      // const { postId, auth, classes, handleDeleteComment } = this.props;\n      // const isCommentCreator = comment.postedBy._id === auth.user._id;\n      console.log(\"comment component....\", comment);\n      return __jsx(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, comment ? comment.map(function (comments) {\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"comment-list\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 22\n          }\n        }, __jsx(\"div\", {\n          className: \"comment-header-img\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }\n        }, __jsx(\"img\", {\n          src: comments.postedBy.avatar,\n          className: \"profile-header-post-pic\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }\n        })), __jsx(\"div\", {\n          className: \"comment-list-container\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }\n        }, __jsx(\"span\", {\n          className: \"commentor-name\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }\n        }), __jsx(\"span\", {\n          classsName: \"comment-time\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }\n        }, _this.formatTimeCreated(comment.createdAt)), __jsx(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }\n        }, comments.text))));\n      }) : null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatTimeCreated\", function (time) {\n      return distanceInWordsToNow(time, {\n        includeSeconds: true,\n        addSuffix: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CardComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          auth = _this$props.auth,\n          comments = _this$props.comments,\n          classes = _this$props.classes;\n      return __jsx(\"div\", {\n        className: \"card-comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"comment-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"comment-header-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: \"/static/images/profile.jpeg\",\n        className: \"profile-header-post-pic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      })), __jsx(\"div\", {\n        className: \"comment-input-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, __jsx(Input, {\n        placeholder: \"Write Review *\",\n        name: \"comment\",\n        type: \"text\",\n        inputCss: \"post-comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }))), __jsx(\"div\", {\n        className: \"comment-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, this.showComment(comments)));\n    }\n  }]);\n\n  return CardComment;\n}(Component);\n\nexport default CardComment;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/CardComment.js"],"names":["React","Component","LikeOutlined","CommentOutlined","ShareAltOutlined","Input","CardComment","comment","console","log","map","comments","postedBy","avatar","formatTimeCreated","createdAt","text","time","distanceInWordsToNow","includeSeconds","addSuffix","props","auth","classes","showComment"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,SAASC,YAAT,EAAsBC,eAAtB,EAAsCC,gBAAtC,QAA+D,mBAA/D;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;IACMC,W;;;;;;;;;;;;;;;;kEAGU,UAACC,OAAD,EAAW;AACnB;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCF,OAApC;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,OAAO,GAACA,OAAO,CAACG,GAAR,CAAY,UAAAC,QAAQ,EAAE;AAC3B,eAAO,4BACN;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACD;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAEA,QAAQ,CAACC,QAAT,CAAkBC,MAA5B;AAAqC,UAAA,SAAS,EAAC,yBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADC,EAID;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAM,UAAA,UAAU,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiC,MAAKC,iBAAL,CAAuBP,OAAO,CAACQ,SAA/B,CAAjC,CAFJ,EAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIJ,QAAQ,CAACK,IAAb,CAHI,CAJC,CADM,CAAP;AAYH,OAbQ,CAAD,GAaL,IAdP,CADJ;AAmBH,K;;wEACmB,UAAAC,IAAI;AAAA,aACxBC,oBAAoB,CAACD,IAAD,EAAO;AACzBE,QAAAA,cAAc,EAAE,IADS;AAEzBC,QAAAA,SAAS,EAAE;AAFc,OAAP,CADI;AAAA,K;;;;;;;6BAKhB;AAAA,wBACgC,KAAKC,KADrC;AAAA,UACIC,IADJ,eACIA,IADJ;AAAA,UACUX,QADV,eACUA,QADV;AAAA,UACoBY,OADpB,eACoBA,OADpB;AAGJ,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,6BAAT;AAAwC,QAAA,SAAS,EAAC,yBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,WAAW,EAAC,gBAAnB;AAAoC,QAAA,IAAI,EAAC,SAAzC;AAAmD,QAAA,IAAI,EAAC,MAAxD;AAA+D,QAAA,QAAQ,EAAC,cAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ,EASI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKC,WAAL,CAAiBb,QAAjB,CADJ,CATJ,CADJ;AAeH;;;;EAnDqBV,S;;AAsD1B,eAAeK,WAAf","sourcesContent":["import React,{Component} from 'react';\nimport { Badge } from \"antd\";\nimport { LikeOutlined,CommentOutlined,ShareAltOutlined  } from \"@ant-design/icons\";\nimport Input from '../Common/Input';\nclass CardComment extends Component{\n\n\n    showComment=(comment)=>{\n        // const { postId, auth, classes, handleDeleteComment } = this.props;\n        // const isCommentCreator = comment.postedBy._id === auth.user._id;\n        console.log(\"comment component....\",comment)\n\n        return (\n            <div>\n                {comment?comment.map(comments=>{\n                    return <>\n                     <div className=\"comment-list\">\n                    <div className=\"comment-header-img\">\n                        <img src={comments.postedBy.avatar}  className=\"profile-header-post-pic\"/>\n                    </div>\n                    <div className=\"comment-list-container\">\n                        <span className=\"commentor-name\">{}</span>\n                        <span classsName=\"comment-time\">{this.formatTimeCreated(comment.createdAt)}</span>\n                <p>{comments.text}</p>\n                    </div>\n                    </div>\n                    </>\n                }):null}\n            </div>\n        )\n       \n    }\n    formatTimeCreated = time =>\n    distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    });\n    render(){\n        const { auth, comments, classes } = this.props;\n      \n        return(\n            <div className=\"card-comment\">   \n                <div className=\"comment-input\">\n                    <div className=\"comment-header-img\">\n                        <img src=\"/static/images/profile.jpeg\"  className=\"profile-header-post-pic\"/>\n                    </div>\n                    <div className=\"comment-input-container\">\n                        <Input placeholder=\"Write Review *\" name=\"comment\" type=\"text\" inputCss=\"post-comment\"   />\n                    </div>\n                </div>\n                <div className=\"comment-list\">\n                   {this.showComment(comments)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardComment;"]},"metadata":{},"sourceType":"module"}