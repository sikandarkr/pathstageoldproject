{"ast":null,"code":"var _jsxFileName = \"/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/CardComment.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { LikeOutlined, CommentOutlined, ShareAltOutlined } from \"@ant-design/icons\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Input from '../Common/Input';\nimport Link from \"next/link\";\n\nclass CardComment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      text: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        text: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      const {\n        text\n      } = this.state;\n      const {\n        postId,\n        handleAddComment\n      } = this.props;\n      event.preventDefault();\n      handleAddComment(postId, text);\n      this.setState({\n        text: \"\"\n      });\n      console.log(\"Comment Added.....\");\n    });\n\n    _defineProperty(this, \"showComment\", comment => {\n      const {\n        postId,\n        auth,\n        classes,\n        handleDeleteComment\n      } = this.props; // const isCommentCreator = comment.postedBy._id === auth.user._id;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, comment ? comment.map(comments => {\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"comment-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }\n        }, __jsx(\"div\", {\n          className: \"comment-header-img\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }, __jsx(\"img\", {\n          src: comments.postedBy.avatar,\n          className: \"profile-header-post-pic\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }\n        })), __jsx(\"div\", {\n          className: \"comment-list-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }, __jsx(\"span\", {\n          className: \"commentor-name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }\n        }, __jsx(Link, {\n          href: `/profile/${comments.postedBy._id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }\n        }, comments.postedBy.name))), __jsx(\"span\", {\n          classsName: \"comment-time\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }\n        }, this.formatTimeCreated(comment.createdAt)), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }, comments.text))));\n      }) : null);\n    });\n\n    _defineProperty(this, \"formatTimeCreated\", time => distanceInWordsToNow(time, {\n      includeSeconds: true,\n      addSuffix: true\n    }));\n  }\n\n  render() {\n    const {\n      auth,\n      comments,\n      classes\n    } = this.props;\n    const {\n      text\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"card-comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"comment-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"comment-header-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: \"/static/images/profile.jpeg\",\n      className: \"profile-header-post-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: \"comment-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, __jsx(Input, {\n      placeholder: \"Write Review *\",\n      id: \"add-comment\",\n      name: \"text\",\n      type: \"text\",\n      inputCss: \"post-comment\",\n      value: text,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    })))), __jsx(\"div\", {\n      className: \"comment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, this.showComment(comments)));\n  }\n\n}\n\nexport default CardComment;","map":{"version":3,"sources":["/Users/sikandarkumarkumar/Desktop/Others/exampl/components/Common/CardComment.js"],"names":["React","Component","LikeOutlined","CommentOutlined","ShareAltOutlined","distanceInWordsToNow","Input","Link","CardComment","text","event","setState","target","value","state","postId","handleAddComment","props","preventDefault","console","log","comment","auth","classes","handleDeleteComment","map","comments","postedBy","avatar","_id","name","formatTimeCreated","createdAt","time","includeSeconds","addSuffix","render","handleSubmit","handleChange","showComment"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { Badge } from \"antd\";\nimport { LikeOutlined,CommentOutlined,ShareAltOutlined  } from \"@ant-design/icons\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport Input from '../Common/Input';\nimport Link from \"next/link\";\nclass CardComment extends Component{\n\n    state = {\n        text: \"\"\n      };\n\n    handleChange = event => {\n        this.setState({ text: event.target.value });\n    };\n    handleSubmit = event => {\n        const { text } = this.state;\n        const { postId, handleAddComment } = this.props;\n        event.preventDefault();\n        handleAddComment(postId, text);\n       \n        this.setState({ text: \"\" });\n        console.log(\"Comment Added.....\");\n    };\n    showComment=(comment)=>{\n        const { postId, auth, classes, handleDeleteComment } = this.props;\n        // const isCommentCreator = comment.postedBy._id === auth.user._id;\n        return (\n            <div>\n                {comment?comment.map(comments=>{\n                    return <>\n                        <div className=\"comment-list\">\n                    <div className=\"comment-header-img\">\n                        <img src={comments.postedBy.avatar}  className=\"profile-header-post-pic\"/>\n                    </div>\n                    <div className=\"comment-list-container\">\n                        <span className=\"commentor-name\">\n                            <Link href={`/profile/${comments.postedBy._id}`}>\n                                <a>{comments.postedBy.name}</a>\n                            </Link>\n                        </span>\n                        <span classsName=\"comment-time\">{this.formatTimeCreated(comment.createdAt)}</span>\n                        <p>{comments.text}</p>\n                    </div>\n                    </div>\n                    </>\n                }):null}\n            </div>\n        )\n    }\n    formatTimeCreated = time =>\n        distanceInWordsToNow(time, {\n        includeSeconds: true,\n        addSuffix: true\n    });\n    render(){\n        const { auth, comments, classes } = this.props;\n        const { text } = this.state;\n      \n        return(\n            <div className=\"card-comment\">   \n                <div className=\"comment-input\">\n                    <div className=\"comment-header-img\">\n                        <img src=\"/static/images/profile.jpeg\"  className=\"profile-header-post-pic\"/>\n                    </div>\n                    <div className=\"comment-input-container\">\n                        <form onSubmit={this.handleSubmit}>\n                            <Input placeholder=\"Write Review *\"   id=\"add-comment\"\n                                name=\"text\"  type=\"text\" inputCss=\"post-comment\"   \n                                value={text}  handleChange={this.handleChange}  \n                            />\n                        </form>\n                    </div>\n                </div>\n                <div className=\"comment-list\">\n                   {this.showComment(comments)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardComment;"]},"metadata":{},"sourceType":"module"}